diff -Naru grpc-go-old/BUILD.bazel grpc-go/BUILD.bazel
--- grpc-go-old/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,116 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+load("@bazel_gazelle//:def.bzl", "gazelle")
+
+# gazelle:prefix google.golang.org/grpc
+gazelle(name = "gazelle")
+
+go_library(
+    name = "grpc",
+    srcs = [
+        "backoff.go",
+        "balancer_conn_wrappers.go",
+        "call.go",
+        "clientconn.go",
+        "codec.go",
+        "dialoptions.go",
+        "doc.go",
+        "interceptor.go",
+        "picker_wrapper.go",
+        "pickfirst.go",
+        "preloader.go",
+        "resolver_conn_wrapper.go",
+        "rpc_util.go",
+        "server.go",
+        "service_config.go",
+        "stream.go",
+        "trace.go",
+        "version.go",
+    ],
+    importpath = "google.golang.org/grpc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//backoff",
+        "//balancer",
+        "//balancer/base",
+        "//balancer/roundrobin",
+        "//channelz",
+        "//codes",
+        "//connectivity",
+        "//credentials",
+        "//credentials/insecure",
+        "//encoding",
+        "//encoding/proto",
+        "//grpclog",
+        "//internal",
+        "//internal/backoff",
+        "//internal/balancer/gracefulswitch",
+        "//internal/balancerload",
+        "//internal/binarylog",
+        "//internal/buffer",
+        "//internal/channelz",
+        "//internal/grpcrand",
+        "//internal/grpcsync",
+        "//internal/grpcutil",
+        "//internal/metadata",
+        "//internal/pretty",
+        "//internal/resolver",
+        "//internal/resolver/dns",
+        "//internal/resolver/passthrough",
+        "//internal/resolver/unix",
+        "//internal/serviceconfig",
+        "//internal/transport",
+        "//keepalive",
+        "//metadata",
+        "//peer",
+        "//resolver",
+        "//serviceconfig",
+        "//stats",
+        "//status",
+        "//tap",
+        "@org_golang_x_net//trace:go_default_library",
+    ],
+)
+
+go_test(
+    name = "grpc_test",
+    srcs = [
+        "clientconn_authority_test.go",
+        "clientconn_parsed_target_test.go",
+        "clientconn_test.go",
+        "codec_test.go",
+        "default_dial_option_server_option_test.go",
+        "grpc_test.go",
+        "picker_wrapper_test.go",
+        "rpc_util_test.go",
+        "server_test.go",
+        "service_config_test.go",
+        "trace_test.go",
+    ],
+    embed = [":grpc"],
+    deps = [
+        "//backoff",
+        "//balancer",
+        "//codes",
+        "//connectivity",
+        "//credentials",
+        "//credentials/insecure",
+        "//encoding",
+        "//encoding/proto",
+        "//internal",
+        "//internal/backoff",
+        "//internal/grpcsync",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//internal/transport",
+        "//keepalive",
+        "//resolver",
+        "//resolver/manual",
+        "//serviceconfig",
+        "//status",
+        "//test/codec_perf",
+        "//testdata",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@org_golang_x_net//http2:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/WORKSPACE grpc-go/WORKSPACE
--- grpc-go-old/WORKSPACE	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/WORKSPACE	2022-11-11 20:16:19.000000000 +0100
@@ -0,0 +1,35 @@
+load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
+
+http_archive(
+    name = "io_bazel_rules_go",
+    sha256 = "099a9fb96a376ccbbb7d291ed4ecbdfd42f6bc822ab77ae6f1b5cb9e914e94fa",
+    urls = [
+        "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.35.0/rules_go-v0.35.0.zip",
+        "https://github.com/bazelbuild/rules_go/releases/download/v0.35.0/rules_go-v0.35.0.zip",
+    ],
+)
+
+http_archive(
+    name = "bazel_gazelle",
+    sha256 = "efbbba6ac1a4fd342d5122cbdfdb82aeb2cf2862e35022c752eaddffada7c3f3",
+    urls = [
+        "https://mirror.bazel.build/github.com/bazelbuild/bazel-gazelle/releases/download/v0.27.0/bazel-gazelle-v0.27.0.tar.gz",
+        "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.27.0/bazel-gazelle-v0.27.0.tar.gz",
+    ],
+)
+
+
+load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")
+load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies", "go_repository")
+
+############################################################
+# Define your own dependencies here using go_repository.
+# Else, dependencies declared by rules_go/gazelle will be used.
+# The first declaration of an external repository "wins".
+############################################################
+
+go_rules_dependencies()
+
+go_register_toolchains(version = "1.18.3")
+
+gazelle_dependencies()
diff -Naru grpc-go-old/admin/BUILD.bazel grpc-go/admin/BUILD.bazel
--- grpc-go-old/admin/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/admin/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "admin",
+    srcs = ["admin.go"],
+    importpath = "google.golang.org/grpc/admin",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//channelz/service",
+        "//internal/admin",
+    ],
+)
+
+go_test(
+    name = "admin_test",
+    srcs = ["admin_test.go"],
+    deps = [
+        "//admin/test",
+        "//codes",
+    ],
+)
diff -Naru grpc-go-old/admin/test/BUILD.bazel grpc-go/admin/test/BUILD.bazel
--- grpc-go-old/admin/test/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/admin/test/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "test",
+    srcs = ["utils.go"],
+    importpath = "google.golang.org/grpc/admin/test",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//admin",
+        "//channelz/grpc_channelz_v1",
+        "//codes",
+        "//credentials/insecure",
+        "//internal/xds",
+        "//status",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/status/v3:go_default_library",
+        "@com_github_google_uuid//:go_default_library",
+    ],
+)
+
+go_test(
+    name = "test_test",
+    srcs = ["admin_test.go"],
+    deps = [
+        ":test",
+        "//codes",
+        "//xds",
+    ],
+)
diff -Naru grpc-go-old/attributes/BUILD.bazel grpc-go/attributes/BUILD.bazel
--- grpc-go-old/attributes/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/attributes/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "attributes",
+    srcs = ["attributes.go"],
+    importpath = "google.golang.org/grpc/attributes",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "attributes_test",
+    srcs = ["attributes_test.go"],
+    deps = [":attributes"],
+)
diff -Naru grpc-go-old/authz/BUILD.bazel grpc-go/authz/BUILD.bazel
--- grpc-go-old/authz/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/authz/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,47 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "authz",
+    srcs = [
+        "grpc_authz_server_interceptors.go",
+        "rbac_translator.go",
+    ],
+    importpath = "google.golang.org/grpc/authz",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//grpclog",
+        "//internal/xds/rbac",
+        "//status",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/rbac/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/matcher/v3:go_default_library",
+    ],
+)
+
+go_test(
+    name = "authz_test",
+    srcs = [
+        "grpc_authz_end2end_test.go",
+        "grpc_authz_server_interceptors_test.go",
+        "rbac_translator_test.go",
+    ],
+    embed = [":authz"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials",
+        "//credentials/insecure",
+        "//internal/grpctest",
+        "//metadata",
+        "//status",
+        "//test/grpc_testing",
+        "//testdata",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/rbac/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/matcher/v3:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@org_golang_google_protobuf//testing/protocmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/backoff/BUILD.bazel grpc-go/backoff/BUILD.bazel
--- grpc-go-old/backoff/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/backoff/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "backoff",
+    srcs = ["backoff.go"],
+    importpath = "google.golang.org/grpc/backoff",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/balancer/BUILD.bazel grpc-go/balancer/BUILD.bazel
--- grpc-go-old/balancer/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "balancer",
+    srcs = [
+        "balancer.go",
+        "conn_state_evaluator.go",
+    ],
+    importpath = "google.golang.org/grpc/balancer",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//channelz",
+        "//connectivity",
+        "//credentials",
+        "//internal",
+        "//metadata",
+        "//resolver",
+        "//serviceconfig",
+    ],
+)
+
+go_test(
+    name = "balancer_test",
+    srcs = ["conn_state_evaluator_test.go"],
+    embed = [":balancer"],
+    deps = [
+        "//connectivity",
+        "//internal/grpctest",
+    ],
+)
diff -Naru grpc-go-old/balancer/base/BUILD.bazel grpc-go/balancer/base/BUILD.bazel
--- grpc-go-old/balancer/base/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/base/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "base",
+    srcs = [
+        "balancer.go",
+        "base.go",
+    ],
+    importpath = "google.golang.org/grpc/balancer/base",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//balancer",
+        "//connectivity",
+        "//grpclog",
+        "//resolver",
+    ],
+)
+
+go_test(
+    name = "base_test",
+    srcs = ["balancer_test.go"],
+    embed = [":base"],
+    deps = [
+        "//attributes",
+        "//balancer",
+        "//connectivity",
+        "//resolver",
+    ],
+)
diff -Naru grpc-go-old/balancer/grpclb/BUILD.bazel grpc-go/balancer/grpclb/BUILD.bazel
--- grpc-go-old/balancer/grpclb/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/grpclb/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,70 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "grpclb",
+    srcs = [
+        "grpclb.go",
+        "grpclb_config.go",
+        "grpclb_picker.go",
+        "grpclb_remote_balancer.go",
+        "grpclb_util.go",
+    ],
+    importpath = "google.golang.org/grpc/balancer/grpclb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//balancer",
+        "//balancer/grpclb/grpc_lb_v1",
+        "//balancer/grpclb/state",
+        "//balancer/roundrobin",
+        "//codes",
+        "//connectivity",
+        "//credentials",
+        "//credentials/insecure",
+        "//grpclog",
+        "//internal",
+        "//internal/backoff",
+        "//internal/grpcrand",
+        "//internal/metadata",
+        "//internal/resolver/dns",
+        "//keepalive",
+        "//metadata",
+        "//resolver",
+        "//serviceconfig",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+        "@io_bazel_rules_go//proto/wkt:timestamp_go_proto",
+    ],
+)
+
+go_test(
+    name = "grpclb_test",
+    srcs = [
+        "grpclb_config_test.go",
+        "grpclb_test.go",
+        "grpclb_util_test.go",
+    ],
+    embed = [":grpclb"],
+    deps = [
+        "//:grpc",
+        "//balancer",
+        "//balancer/grpclb/grpc_lb_v1",
+        "//balancer/grpclb/state",
+        "//codes",
+        "//credentials",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//metadata",
+        "//peer",
+        "//resolver",
+        "//resolver/manual",
+        "//serviceconfig",
+        "//status",
+        "//test/grpc_testing",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+    ],
+)
diff -Naru grpc-go-old/balancer/grpclb/grpc_lb_v1/BUILD.bazel grpc-go/balancer/grpclb/grpc_lb_v1/BUILD.bazel
--- grpc-go-old/balancer/grpclb/grpc_lb_v1/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/grpclb/grpc_lb_v1/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_lb_v1",
+    srcs = [
+        "load_balancer.pb.go",
+        "load_balancer_grpc.pb.go",
+    ],
+    importpath = "google.golang.org/grpc/balancer/grpclb/grpc_lb_v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//runtime/protoimpl:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+        "@org_golang_google_protobuf//types/known/timestamppb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/balancer/grpclb/state/BUILD.bazel grpc-go/balancer/grpclb/state/BUILD.bazel
--- grpc-go-old/balancer/grpclb/state/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/grpclb/state/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "state",
+    srcs = ["state.go"],
+    importpath = "google.golang.org/grpc/balancer/grpclb/state",
+    visibility = ["//visibility:public"],
+    deps = ["//resolver"],
+)
diff -Naru grpc-go-old/balancer/rls/BUILD.bazel grpc-go/balancer/rls/BUILD.bazel
--- grpc-go-old/balancer/rls/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/rls/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,85 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "rls",
+    srcs = [
+        "balancer.go",
+        "cache.go",
+        "child_policy.go",
+        "config.go",
+        "control_channel.go",
+        "picker.go",
+    ],
+    importpath = "google.golang.org/grpc/balancer/rls",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//balancer",
+        "//balancer/base",
+        "//balancer/rls/internal/adaptive",
+        "//balancer/rls/internal/keys",
+        "//codes",
+        "//connectivity",
+        "//credentials/insecure",
+        "//grpclog",
+        "//internal",
+        "//internal/backoff",
+        "//internal/balancergroup",
+        "//internal/buffer",
+        "//internal/grpclog",
+        "//internal/grpcsync",
+        "//internal/pretty",
+        "//internal/proto/grpc_lookup_v1",
+        "//metadata",
+        "//resolver",
+        "//serviceconfig",
+        "//status",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+        "@org_golang_google_protobuf//encoding/protojson:go_default_library",
+    ],
+)
+
+go_test(
+    name = "rls_test",
+    srcs = [
+        "balancer_test.go",
+        "cache_test.go",
+        "config_test.go",
+        "control_channel_test.go",
+        "helpers_test.go",
+        "picker_test.go",
+    ],
+    embed = [":rls"],
+    deps = [
+        "//:grpc",
+        "//balancer",
+        "//balancer/grpclb",
+        "//balancer/rls/internal/test/e2e",
+        "//codes",
+        "//connectivity",
+        "//credentials",
+        "//credentials/insecure",
+        "//internal",
+        "//internal/backoff",
+        "//internal/balancergroup",
+        "//internal/grpctest",
+        "//internal/proto/grpc_lookup_v1",
+        "//internal/resolver/passthrough",
+        "//internal/serviceconfig",
+        "//internal/stubserver",
+        "//internal/testutils",
+        "//internal/testutils/rls",
+        "//metadata",
+        "//resolver",
+        "//resolver/manual",
+        "//serviceconfig",
+        "//status",
+        "//test/grpc_testing",
+        "//testdata",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@org_golang_google_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/balancer/rls/internal/adaptive/BUILD.bazel grpc-go/balancer/rls/internal/adaptive/BUILD.bazel
--- grpc-go-old/balancer/rls/internal/adaptive/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/rls/internal/adaptive/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "adaptive",
+    srcs = [
+        "adaptive.go",
+        "lookback.go",
+    ],
+    importpath = "google.golang.org/grpc/balancer/rls/internal/adaptive",
+    visibility = ["//balancer/rls:__subpackages__"],
+    deps = ["//internal/grpcrand"],
+)
+
+go_test(
+    name = "adaptive_test",
+    srcs = [
+        "adaptive_test.go",
+        "lookback_test.go",
+    ],
+    embed = [":adaptive"],
+)
diff -Naru grpc-go-old/balancer/rls/internal/keys/BUILD.bazel grpc-go/balancer/rls/internal/keys/BUILD.bazel
--- grpc-go-old/balancer/rls/internal/keys/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/rls/internal/keys/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "keys",
+    srcs = ["builder.go"],
+    importpath = "google.golang.org/grpc/balancer/rls/internal/keys",
+    visibility = ["//balancer/rls:__subpackages__"],
+    deps = [
+        "//internal/proto/grpc_lookup_v1",
+        "//metadata",
+    ],
+)
+
+go_test(
+    name = "keys_test",
+    srcs = ["builder_test.go"],
+    embed = [":keys"],
+    deps = [
+        "//internal/proto/grpc_lookup_v1",
+        "//metadata",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/balancer/rls/internal/test/e2e/BUILD.bazel grpc-go/balancer/rls/internal/test/e2e/BUILD.bazel
--- grpc-go-old/balancer/rls/internal/test/e2e/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/rls/internal/test/e2e/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "e2e",
+    srcs = [
+        "e2e.go",
+        "rls_child_policy.go",
+        "rls_lb_config.go",
+    ],
+    importpath = "google.golang.org/grpc/balancer/rls/internal/test/e2e",
+    visibility = ["//balancer/rls:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//balancer",
+        "//internal/grpcsync",
+        "//internal/proto/grpc_lookup_v1",
+        "//internal/serviceconfig",
+        "//resolver",
+        "//serviceconfig",
+        "@org_golang_google_protobuf//encoding/protojson:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/balancer/roundrobin/BUILD.bazel grpc-go/balancer/roundrobin/BUILD.bazel
--- grpc-go-old/balancer/roundrobin/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/roundrobin/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "roundrobin",
+    srcs = ["roundrobin.go"],
+    importpath = "google.golang.org/grpc/balancer/roundrobin",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//balancer",
+        "//balancer/base",
+        "//grpclog",
+        "//internal/grpcrand",
+    ],
+)
diff -Naru grpc-go-old/balancer/weightedroundrobin/BUILD.bazel grpc-go/balancer/weightedroundrobin/BUILD.bazel
--- grpc-go-old/balancer/weightedroundrobin/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/weightedroundrobin/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "weightedroundrobin",
+    srcs = ["weightedroundrobin.go"],
+    importpath = "google.golang.org/grpc/balancer/weightedroundrobin",
+    visibility = ["//visibility:public"],
+    deps = ["//resolver"],
+)
+
+go_test(
+    name = "weightedroundrobin_test",
+    srcs = ["weightedroundrobin_test.go"],
+    embed = [":weightedroundrobin"],
+    deps = [
+        "//attributes",
+        "//resolver",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/balancer/weightedtarget/BUILD.bazel grpc-go/balancer/weightedtarget/BUILD.bazel
--- grpc-go-old/balancer/weightedtarget/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/weightedtarget/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,50 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "weightedtarget",
+    srcs = [
+        "logging.go",
+        "weightedtarget.go",
+        "weightedtarget_config.go",
+    ],
+    importpath = "google.golang.org/grpc/balancer/weightedtarget",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//balancer",
+        "//balancer/weightedtarget/weightedaggregator",
+        "//grpclog",
+        "//internal/balancergroup",
+        "//internal/grpclog",
+        "//internal/hierarchy",
+        "//internal/pretty",
+        "//internal/serviceconfig",
+        "//internal/wrr",
+        "//resolver",
+        "//serviceconfig",
+    ],
+)
+
+go_test(
+    name = "weightedtarget_test",
+    srcs = [
+        "weightedtarget_config_test.go",
+        "weightedtarget_test.go",
+    ],
+    embed = [":weightedtarget"],
+    deps = [
+        "//attributes",
+        "//balancer",
+        "//balancer/grpclb",
+        "//balancer/roundrobin",
+        "//connectivity",
+        "//internal/balancer/stub",
+        "//internal/balancergroup",
+        "//internal/grpctest",
+        "//internal/hierarchy",
+        "//internal/serviceconfig",
+        "//internal/testutils",
+        "//resolver",
+        "//serviceconfig",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/balancer/weightedtarget/weightedaggregator/BUILD.bazel grpc-go/balancer/weightedtarget/weightedaggregator/BUILD.bazel
--- grpc-go-old/balancer/weightedtarget/weightedaggregator/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/balancer/weightedtarget/weightedaggregator/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "weightedaggregator",
+    srcs = ["aggregator.go"],
+    importpath = "google.golang.org/grpc/balancer/weightedtarget/weightedaggregator",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//balancer",
+        "//balancer/base",
+        "//connectivity",
+        "//internal/grpclog",
+        "//internal/wrr",
+    ],
+)
diff -Naru grpc-go-old/benchmark/BUILD.bazel grpc-go/benchmark/BUILD.bazel
--- grpc-go-old/benchmark/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/benchmark/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "benchmark",
+    srcs = ["benchmark.go"],
+    importpath = "google.golang.org/grpc/benchmark",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//grpclog",
+        "//interop/grpc_testing",
+        "//metadata",
+        "//status",
+    ],
+)
diff -Naru grpc-go-old/benchmark/benchmain/BUILD.bazel grpc-go/benchmark/benchmain/BUILD.bazel
--- grpc-go-old/benchmark/benchmain/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/benchmark/benchmain/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "benchmain_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/benchmark/benchmain",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//benchmark",
+        "//benchmark/flags",
+        "//benchmark/latency",
+        "//benchmark/stats",
+        "//credentials/insecure",
+        "//grpclog",
+        "//internal/channelz",
+        "//interop/grpc_testing",
+        "//keepalive",
+        "//metadata",
+        "//test/bufconn",
+    ],
+)
+
+go_binary(
+    name = "benchmain",
+    embed = [":benchmain_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/benchmark/benchresult/BUILD.bazel grpc-go/benchmark/benchresult/BUILD.bazel
--- grpc-go-old/benchmark/benchresult/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/benchmark/benchresult/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "benchresult_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/benchmark/benchresult",
+    visibility = ["//visibility:private"],
+    deps = ["//benchmark/stats"],
+)
+
+go_binary(
+    name = "benchresult",
+    embed = [":benchresult_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/benchmark/client/BUILD.bazel grpc-go/benchmark/client/BUILD.bazel
--- grpc-go-old/benchmark/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/benchmark/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/benchmark/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//benchmark",
+        "//benchmark/stats",
+        "//credentials/insecure",
+        "//grpclog",
+        "//internal/syscall",
+        "//interop/grpc_testing",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/benchmark/flags/BUILD.bazel grpc-go/benchmark/flags/BUILD.bazel
--- grpc-go-old/benchmark/flags/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/benchmark/flags/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "flags",
+    srcs = ["flags.go"],
+    importpath = "google.golang.org/grpc/benchmark/flags",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "flags_test",
+    srcs = ["flags_test.go"],
+    embed = [":flags"],
+    deps = ["//internal/grpctest"],
+)
diff -Naru grpc-go-old/benchmark/latency/BUILD.bazel grpc-go/benchmark/latency/BUILD.bazel
--- grpc-go-old/benchmark/latency/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/benchmark/latency/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "latency",
+    srcs = ["latency.go"],
+    importpath = "google.golang.org/grpc/benchmark/latency",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "latency_test",
+    srcs = ["latency_test.go"],
+    embed = [":latency"],
+    deps = ["//internal/grpctest"],
+)
diff -Naru grpc-go-old/benchmark/primitives/BUILD.bazel grpc-go/benchmark/primitives/BUILD.bazel
--- grpc-go-old/benchmark/primitives/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/benchmark/primitives/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,13 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "primitives_test",
+    srcs = [
+        "code_string_test.go",
+        "context_test.go",
+        "primitives_test.go",
+        "safe_config_selector_test.go",
+        "syncmap_test.go",
+    ],
+    deps = ["//codes"],
+)
diff -Naru grpc-go-old/benchmark/server/BUILD.bazel grpc-go/benchmark/server/BUILD.bazel
--- grpc-go-old/benchmark/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/benchmark/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/benchmark/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//benchmark",
+        "//grpclog",
+        "//internal/syscall",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/benchmark/stats/BUILD.bazel grpc-go/benchmark/stats/BUILD.bazel
--- grpc-go-old/benchmark/stats/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/benchmark/stats/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,13 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stats",
+    srcs = [
+        "curve.go",
+        "histogram.go",
+        "stats.go",
+    ],
+    importpath = "google.golang.org/grpc/benchmark/stats",
+    visibility = ["//visibility:public"],
+    deps = ["//:grpc"],
+)
diff -Naru grpc-go-old/benchmark/worker/BUILD.bazel grpc-go/benchmark/worker/BUILD.bazel
--- grpc-go-old/benchmark/worker/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/benchmark/worker/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "worker_lib",
+    srcs = [
+        "benchmark_client.go",
+        "benchmark_server.go",
+        "main.go",
+    ],
+    importpath = "google.golang.org/grpc/benchmark/worker",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//benchmark",
+        "//benchmark/stats",
+        "//codes",
+        "//credentials",
+        "//credentials/insecure",
+        "//grpclog",
+        "//internal/syscall",
+        "//interop/grpc_testing",
+        "//status",
+        "//testdata",
+        "//xds",
+    ],
+)
+
+go_binary(
+    name = "worker",
+    embed = [":worker_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/binarylog/BUILD.bazel grpc-go/binarylog/BUILD.bazel
--- grpc-go-old/binarylog/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/binarylog/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "binarylog",
+    srcs = ["sink.go"],
+    importpath = "google.golang.org/grpc/binarylog",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//binarylog/grpc_binarylog_v1",
+        "//internal/binarylog",
+    ],
+)
+
+go_test(
+    name = "binarylog_test",
+    srcs = ["binarylog_end2end_test.go"],
+    deps = [
+        ":binarylog",
+        "//:grpc",
+        "//binarylog/grpc_binarylog_v1",
+        "//credentials/insecure",
+        "//grpclog",
+        "//internal/binarylog",
+        "//internal/grpctest",
+        "//interop/grpc_testing",
+        "//metadata",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/binarylog/grpc_binarylog_v1/BUILD.bazel grpc-go/binarylog/grpc_binarylog_v1/BUILD.bazel
--- grpc-go-old/binarylog/grpc_binarylog_v1/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/binarylog/grpc_binarylog_v1/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_binarylog_v1",
+    srcs = ["binarylog.pb.go"],
+    importpath = "google.golang.org/grpc/binarylog/grpc_binarylog_v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//runtime/protoimpl:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+        "@org_golang_google_protobuf//types/known/timestamppb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/channelz/BUILD.bazel grpc-go/channelz/BUILD.bazel
--- grpc-go-old/channelz/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/channelz/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "channelz",
+    srcs = ["channelz.go"],
+    importpath = "google.golang.org/grpc/channelz",
+    visibility = ["//visibility:public"],
+    deps = ["//internal/channelz"],
+)
diff -Naru grpc-go-old/channelz/grpc_channelz_v1/BUILD.bazel grpc-go/channelz/grpc_channelz_v1/BUILD.bazel
--- grpc-go-old/channelz/grpc_channelz_v1/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/channelz/grpc_channelz_v1/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_channelz_v1",
+    srcs = [
+        "channelz.pb.go",
+        "channelz_grpc.pb.go",
+    ],
+    importpath = "google.golang.org/grpc/channelz/grpc_channelz_v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//runtime/protoimpl:go_default_library",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+        "@org_golang_google_protobuf//types/known/timestamppb:go_default_library",
+        "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/channelz/service/BUILD.bazel grpc-go/channelz/service/BUILD.bazel
--- grpc-go-old/channelz/service/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/channelz/service/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,75 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "service",
+    srcs = [
+        "func_linux.go",
+        "func_nonlinux.go",
+        "service.go",
+    ],
+    importpath = "google.golang.org/grpc/channelz/service",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//channelz/grpc_channelz_v1",
+        "//codes",
+        "//connectivity",
+        "//credentials",
+        "//grpclog",
+        "//internal/channelz",
+        "//status",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//internal/testutils",
+            "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//internal/testutils",
+            "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_test(
+    name = "service_test",
+    srcs = [
+        "service_sktopt_test.go",
+        "service_test.go",
+        "util_sktopt_386_test.go",
+        "util_sktopt_amd64_test.go",
+    ],
+    embed = [":service"],
+    deps = [
+        "//channelz/grpc_channelz_v1",
+        "//connectivity",
+        "//credentials",
+        "//internal/channelz",
+        "//internal/grpctest",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@org_golang_google_protobuf//testing/protocmp:go_default_library",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android_386": [
+            "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:android_amd64": [
+            "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_386": [
+            "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_amd64": [
+            "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -Naru grpc-go-old/cmd/protoc-gen-go-grpc/BUILD.bazel grpc-go/cmd/protoc-gen-go-grpc/BUILD.bazel
--- grpc-go-old/cmd/protoc-gen-go-grpc/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/cmd/protoc-gen-go-grpc/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "protoc-gen-go-grpc_lib",
+    srcs = [
+        "grpc.go",
+        "main.go",
+    ],
+    importpath = "google.golang.org/grpc/cmd/protoc-gen-go-grpc",
+    visibility = ["//visibility:private"],
+    deps = [
+        "@org_golang_google_protobuf//compiler/protogen:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//types/descriptorpb:go_default_library",
+        "@org_golang_google_protobuf//types/pluginpb:go_default_library",
+    ],
+)
+
+go_binary(
+    name = "protoc-gen-go-grpc",
+    embed = [":protoc-gen-go-grpc_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/codes/BUILD.bazel grpc-go/codes/BUILD.bazel
--- grpc-go-old/codes/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/codes/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "codes",
+    srcs = [
+        "code_string.go",
+        "codes.go",
+    ],
+    importpath = "google.golang.org/grpc/codes",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "codes_test",
+    srcs = ["codes_test.go"],
+    embed = [":codes"],
+    deps = [
+        "//internal/grpctest",
+        "@go_googleapis//google/rpc:code_go_proto",
+    ],
+)
diff -Naru grpc-go-old/connectivity/BUILD.bazel grpc-go/connectivity/BUILD.bazel
--- grpc-go-old/connectivity/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/connectivity/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "connectivity",
+    srcs = ["connectivity.go"],
+    importpath = "google.golang.org/grpc/connectivity",
+    visibility = ["//visibility:public"],
+    deps = ["//grpclog"],
+)
diff -Naru grpc-go-old/credentials/BUILD.bazel grpc-go/credentials/BUILD.bazel
--- grpc-go-old/credentials/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "credentials",
+    srcs = [
+        "credentials.go",
+        "tls.go",
+    ],
+    importpath = "google.golang.org/grpc/credentials",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//attributes",
+        "//internal/credentials",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
+
+go_test(
+    name = "credentials_test",
+    srcs = ["credentials_test.go"],
+    embed = [":credentials"],
+    deps = [
+        "//internal/grpctest",
+        "//testdata",
+    ],
+)
diff -Naru grpc-go-old/credentials/alts/BUILD.bazel grpc-go/credentials/alts/BUILD.bazel
--- grpc-go-old/credentials/alts/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/alts/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,59 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "alts",
+    srcs = [
+        "alts.go",
+        "utils.go",
+    ],
+    importpath = "google.golang.org/grpc/credentials/alts",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//codes",
+        "//credentials",
+        "//credentials/alts/internal",
+        "//credentials/alts/internal/handshaker",
+        "//credentials/alts/internal/handshaker/service",
+        "//credentials/alts/internal/proto/grpc_gcp",
+        "//grpclog",
+        "//internal/googlecloud",
+        "//peer",
+        "//status",
+    ],
+)
+
+go_test(
+    name = "alts_test",
+    srcs = [
+        "alts_test.go",
+        "utils_test.go",
+    ],
+    embed = [":alts"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//codes",
+            "//credentials/alts/internal/proto/grpc_gcp",
+            "//internal/grpctest",
+            "//peer",
+            "//status",
+            "@com_github_golang_protobuf//proto:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//codes",
+            "//credentials/alts/internal/proto/grpc_gcp",
+            "//internal/grpctest",
+            "//peer",
+            "//status",
+            "@com_github_golang_protobuf//proto:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//codes",
+            "//credentials/alts/internal/proto/grpc_gcp",
+            "//internal/grpctest",
+            "//peer",
+            "//status",
+            "@com_github_golang_protobuf//proto:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -Naru grpc-go-old/credentials/alts/internal/BUILD.bazel grpc-go/credentials/alts/internal/BUILD.bazel
--- grpc-go-old/credentials/alts/internal/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/alts/internal/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = ["common.go"],
+    importpath = "google.golang.org/grpc/credentials/alts/internal",
+    visibility = ["//credentials/alts:__subpackages__"],
+    deps = ["//credentials"],
+)
diff -Naru grpc-go-old/credentials/alts/internal/authinfo/BUILD.bazel grpc-go/credentials/alts/internal/authinfo/BUILD.bazel
--- grpc-go-old/credentials/alts/internal/authinfo/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/alts/internal/authinfo/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "authinfo",
+    srcs = ["authinfo.go"],
+    importpath = "google.golang.org/grpc/credentials/alts/internal/authinfo",
+    visibility = ["//credentials/alts:__subpackages__"],
+    deps = [
+        "//credentials",
+        "//credentials/alts/internal/proto/grpc_gcp",
+    ],
+)
+
+go_test(
+    name = "authinfo_test",
+    srcs = ["authinfo_test.go"],
+    embed = [":authinfo"],
+    deps = [
+        "//credentials/alts/internal/proto/grpc_gcp",
+        "//internal/grpctest",
+    ],
+)
diff -Naru grpc-go-old/credentials/alts/internal/conn/BUILD.bazel grpc-go/credentials/alts/internal/conn/BUILD.bazel
--- grpc-go-old/credentials/alts/internal/conn/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/alts/internal/conn/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "conn",
+    srcs = [
+        "aeadrekey.go",
+        "aes128gcm.go",
+        "aes128gcmrekey.go",
+        "common.go",
+        "counter.go",
+        "record.go",
+        "utils.go",
+    ],
+    importpath = "google.golang.org/grpc/credentials/alts/internal/conn",
+    visibility = ["//credentials/alts:__subpackages__"],
+    deps = ["//credentials/alts/internal"],
+)
+
+go_test(
+    name = "conn_test",
+    srcs = [
+        "aeadrekey_test.go",
+        "aes128gcm_test.go",
+        "aes128gcmrekey_test.go",
+        "counter_test.go",
+        "record_test.go",
+    ],
+    embed = [":conn"],
+    deps = [
+        "//credentials/alts/internal",
+        "//internal/grpctest",
+    ],
+)
diff -Naru grpc-go-old/credentials/alts/internal/handshaker/BUILD.bazel grpc-go/credentials/alts/internal/handshaker/BUILD.bazel
--- grpc-go-old/credentials/alts/internal/handshaker/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/alts/internal/handshaker/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "handshaker",
+    srcs = ["handshaker.go"],
+    importpath = "google.golang.org/grpc/credentials/alts/internal/handshaker",
+    visibility = ["//credentials/alts:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials",
+        "//credentials/alts/internal",
+        "//credentials/alts/internal/authinfo",
+        "//credentials/alts/internal/conn",
+        "//credentials/alts/internal/proto/grpc_gcp",
+    ],
+)
+
+go_test(
+    name = "handshaker_test",
+    srcs = ["handshaker_test.go"],
+    embed = [":handshaker"],
+    deps = [
+        "//:grpc",
+        "//credentials/alts/internal",
+        "//credentials/alts/internal/proto/grpc_gcp",
+        "//credentials/alts/internal/testutil",
+        "//internal/grpctest",
+    ],
+)
diff -Naru grpc-go-old/credentials/alts/internal/handshaker/service/BUILD.bazel grpc-go/credentials/alts/internal/handshaker/service/BUILD.bazel
--- grpc-go-old/credentials/alts/internal/handshaker/service/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/alts/internal/handshaker/service/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "service",
+    srcs = ["service.go"],
+    importpath = "google.golang.org/grpc/credentials/alts/internal/handshaker/service",
+    visibility = ["//credentials/alts:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+    ],
+)
+
+go_test(
+    name = "service_test",
+    srcs = ["service_test.go"],
+    embed = [":service"],
+    deps = ["//:grpc"],
+)
diff -Naru grpc-go-old/credentials/alts/internal/proto/grpc_gcp/BUILD.bazel grpc-go/credentials/alts/internal/proto/grpc_gcp/BUILD.bazel
--- grpc-go-old/credentials/alts/internal/proto/grpc_gcp/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/alts/internal/proto/grpc_gcp/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_gcp",
+    srcs = [
+        "altscontext.pb.go",
+        "handshaker.pb.go",
+        "handshaker_grpc.pb.go",
+        "transport_security_common.pb.go",
+    ],
+    importpath = "google.golang.org/grpc/credentials/alts/internal/proto/grpc_gcp",
+    visibility = ["//credentials/alts:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//runtime/protoimpl:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/credentials/alts/internal/testutil/BUILD.bazel grpc-go/credentials/alts/internal/testutil/BUILD.bazel
--- grpc-go-old/credentials/alts/internal/testutil/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/alts/internal/testutil/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "testutil",
+    srcs = ["testutil.go"],
+    importpath = "google.golang.org/grpc/credentials/alts/internal/testutil",
+    visibility = ["//credentials/alts:__subpackages__"],
+    deps = ["//credentials/alts/internal/conn"],
+)
diff -Naru grpc-go-old/credentials/google/BUILD.bazel grpc-go/credentials/google/BUILD.bazel
--- grpc-go-old/credentials/google/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/google/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "google",
+    srcs = [
+        "google.go",
+        "xds.go",
+    ],
+    importpath = "google.golang.org/grpc/credentials/google",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//credentials",
+        "//credentials/alts",
+        "//credentials/oauth",
+        "//grpclog",
+        "//internal",
+    ],
+)
+
+go_test(
+    name = "google_test",
+    srcs = [
+        "google_test.go",
+        "xds_test.go",
+    ],
+    embed = [":google"],
+    deps = [
+        "//credentials",
+        "//internal",
+        "//internal/credentials",
+        "//internal/grpctest",
+        "//resolver",
+    ],
+)
diff -Naru grpc-go-old/credentials/insecure/BUILD.bazel grpc-go/credentials/insecure/BUILD.bazel
--- grpc-go-old/credentials/insecure/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/insecure/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "insecure",
+    srcs = ["insecure.go"],
+    importpath = "google.golang.org/grpc/credentials/insecure",
+    visibility = ["//visibility:public"],
+    deps = ["//credentials"],
+)
diff -Naru grpc-go-old/credentials/local/BUILD.bazel grpc-go/credentials/local/BUILD.bazel
--- grpc-go-old/credentials/local/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/local/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "local",
+    srcs = ["local.go"],
+    importpath = "google.golang.org/grpc/credentials/local",
+    visibility = ["//visibility:public"],
+    deps = ["//credentials"],
+)
+
+go_test(
+    name = "local_test",
+    srcs = ["local_test.go"],
+    embed = [":local"],
+    deps = [
+        "//credentials",
+        "//internal/grpctest",
+    ],
+)
diff -Naru grpc-go-old/credentials/oauth/BUILD.bazel grpc-go/credentials/oauth/BUILD.bazel
--- grpc-go-old/credentials/oauth/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/oauth/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "oauth",
+    srcs = ["oauth.go"],
+    importpath = "google.golang.org/grpc/credentials/oauth",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//credentials",
+        "@org_golang_x_oauth2//:go_default_library",
+        "@org_golang_x_oauth2//google:go_default_library",
+        "@org_golang_x_oauth2//jwt:go_default_library",
+    ],
+)
+
+go_test(
+    name = "oauth_test",
+    srcs = ["oauth_test.go"],
+    embed = [":oauth"],
+)
diff -Naru grpc-go-old/credentials/sts/BUILD.bazel grpc-go/credentials/sts/BUILD.bazel
--- grpc-go-old/credentials/sts/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/sts/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "sts",
+    srcs = ["sts.go"],
+    importpath = "google.golang.org/grpc/credentials/sts",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//credentials",
+        "//grpclog",
+    ],
+)
+
+go_test(
+    name = "sts_test",
+    srcs = ["sts_test.go"],
+    embed = [":sts"],
+    deps = [
+        "//credentials",
+        "//internal/credentials",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/credentials/tls/certprovider/BUILD.bazel grpc-go/credentials/tls/certprovider/BUILD.bazel
--- grpc-go-old/credentials/tls/certprovider/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/tls/certprovider/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "certprovider",
+    srcs = [
+        "distributor.go",
+        "provider.go",
+        "store.go",
+    ],
+    importpath = "google.golang.org/grpc/credentials/tls/certprovider",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//internal",
+        "//internal/grpcsync",
+    ],
+)
+
+go_test(
+    name = "certprovider_test",
+    srcs = [
+        "distributor_test.go",
+        "store_test.go",
+    ],
+    embed = [":certprovider"],
+    deps = [
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//testdata",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/credentials/tls/certprovider/pemfile/BUILD.bazel grpc-go/credentials/tls/certprovider/pemfile/BUILD.bazel
--- grpc-go-old/credentials/tls/certprovider/pemfile/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/tls/certprovider/pemfile/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "pemfile",
+    srcs = [
+        "builder.go",
+        "watcher.go",
+    ],
+    importpath = "google.golang.org/grpc/credentials/tls/certprovider/pemfile",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//credentials/tls/certprovider",
+        "//grpclog",
+        "@org_golang_google_protobuf//encoding/protojson:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+    ],
+)
+
+go_test(
+    name = "pemfile_test",
+    srcs = [
+        "builder_test.go",
+        "watcher_test.go",
+    ],
+    embed = [":pemfile"],
+    deps = [
+        "//credentials/tls/certprovider",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//testdata",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/credentials/xds/BUILD.bazel grpc-go/credentials/xds/BUILD.bazel
--- grpc-go-old/credentials/xds/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/credentials/xds/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "xds",
+    srcs = ["xds.go"],
+    importpath = "google.golang.org/grpc/credentials/xds",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//credentials",
+        "//internal/credentials",
+        "//internal/credentials/xds",
+    ],
+)
+
+go_test(
+    name = "xds_test",
+    srcs = [
+        "xds_client_test.go",
+        "xds_server_test.go",
+    ],
+    embed = [":xds"],
+    deps = [
+        "//credentials",
+        "//credentials/tls/certprovider",
+        "//internal/credentials",
+        "//internal/credentials/xds",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//internal/xds/matcher",
+        "//resolver",
+        "//testdata",
+    ],
+)
diff -Naru grpc-go-old/encoding/BUILD.bazel grpc-go/encoding/BUILD.bazel
--- grpc-go-old/encoding/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/encoding/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "encoding",
+    srcs = ["encoding.go"],
+    importpath = "google.golang.org/grpc/encoding",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/encoding/gzip/BUILD.bazel grpc-go/encoding/gzip/BUILD.bazel
--- grpc-go-old/encoding/gzip/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/encoding/gzip/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "gzip",
+    srcs = ["gzip.go"],
+    importpath = "google.golang.org/grpc/encoding/gzip",
+    visibility = ["//visibility:public"],
+    deps = ["//encoding"],
+)
diff -Naru grpc-go-old/encoding/proto/BUILD.bazel grpc-go/encoding/proto/BUILD.bazel
--- grpc-go-old/encoding/proto/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/encoding/proto/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "proto",
+    srcs = ["proto.go"],
+    importpath = "google.golang.org/grpc/encoding/proto",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//encoding",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
+
+go_test(
+    name = "proto_test",
+    srcs = [
+        "proto_benchmark_test.go",
+        "proto_test.go",
+    ],
+    embed = [":proto"],
+    deps = [
+        "//encoding",
+        "//internal/grpctest",
+        "//test/codec_perf",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/examples/data/BUILD.bazel grpc-go/examples/data/BUILD.bazel
--- grpc-go-old/examples/data/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/data/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "data",
+    srcs = ["data.go"],
+    importpath = "google.golang.org/grpc/examples/data",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/authentication/client/BUILD.bazel grpc-go/examples/features/authentication/client/BUILD.bazel
--- grpc-go-old/examples/features/authentication/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/authentication/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/authentication/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//credentials/oauth",
+        "//examples/data",
+        "//examples/features/proto/echo",
+        "@org_golang_x_oauth2//:go_default_library",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/authentication/server/BUILD.bazel grpc-go/examples/features/authentication/server/BUILD.bazel
--- grpc-go-old/examples/features/authentication/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/authentication/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/authentication/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials",
+        "//examples/data",
+        "//examples/features/proto/echo",
+        "//metadata",
+        "//status",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/cancellation/client/BUILD.bazel grpc-go/examples/features/cancellation/client/BUILD.bazel
--- grpc-go-old/examples/features/cancellation/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/cancellation/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/cancellation/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+        "//status",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/cancellation/server/BUILD.bazel grpc-go/examples/features/cancellation/server/BUILD.bazel
--- grpc-go-old/examples/features/cancellation/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/cancellation/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/cancellation/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/compression/client/BUILD.bazel grpc-go/examples/features/compression/client/BUILD.bazel
--- grpc-go-old/examples/features/compression/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/compression/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/compression/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//encoding/gzip",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/compression/server/BUILD.bazel grpc-go/examples/features/compression/server/BUILD.bazel
--- grpc-go-old/examples/features/compression/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/compression/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/compression/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//encoding/gzip",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/deadline/client/BUILD.bazel grpc-go/examples/features/deadline/client/BUILD.bazel
--- grpc-go-old/examples/features/deadline/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/deadline/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/deadline/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+        "//status",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/deadline/server/BUILD.bazel grpc-go/examples/features/deadline/server/BUILD.bazel
--- grpc-go-old/examples/features/deadline/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/deadline/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/deadline/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+        "//status",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/debugging/client/BUILD.bazel grpc-go/examples/features/debugging/client/BUILD.bazel
--- grpc-go-old/examples/features/debugging/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/debugging/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/debugging/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//channelz/service",
+        "//credentials/insecure",
+        "//examples/helloworld/helloworld",
+        "//resolver",
+        "//resolver/manual",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/debugging/server/BUILD.bazel grpc-go/examples/features/debugging/server/BUILD.bazel
--- grpc-go-old/examples/features/debugging/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/debugging/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/debugging/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//channelz/service",
+        "//examples/helloworld/helloworld",
+        "//internal/grpcrand",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/encryption/ALTS/client/BUILD.bazel grpc-go/examples/features/encryption/ALTS/client/BUILD.bazel
--- grpc-go-old/examples/features/encryption/ALTS/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/encryption/ALTS/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/encryption/ALTS/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/alts",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/encryption/ALTS/server/BUILD.bazel grpc-go/examples/features/encryption/ALTS/server/BUILD.bazel
--- grpc-go-old/examples/features/encryption/ALTS/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/encryption/ALTS/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/encryption/ALTS/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/alts",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/encryption/TLS/client/BUILD.bazel grpc-go/examples/features/encryption/TLS/client/BUILD.bazel
--- grpc-go-old/examples/features/encryption/TLS/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/encryption/TLS/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/encryption/TLS/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//examples/data",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/encryption/TLS/server/BUILD.bazel grpc-go/examples/features/encryption/TLS/server/BUILD.bazel
--- grpc-go-old/examples/features/encryption/TLS/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/encryption/TLS/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/encryption/TLS/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//examples/data",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/encryption/mTLS/client/BUILD.bazel grpc-go/examples/features/encryption/mTLS/client/BUILD.bazel
--- grpc-go-old/examples/features/encryption/mTLS/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/encryption/mTLS/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/encryption/mTLS/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//examples/data",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/encryption/mTLS/server/BUILD.bazel grpc-go/examples/features/encryption/mTLS/server/BUILD.bazel
--- grpc-go-old/examples/features/encryption/mTLS/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/encryption/mTLS/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/encryption/mTLS/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//examples/data",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/errors/client/BUILD.bazel grpc-go/examples/features/errors/client/BUILD.bazel
--- grpc-go-old/examples/features/errors/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/errors/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/errors/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//examples/helloworld/helloworld",
+        "//status",
+        "@go_googleapis//google/rpc:errdetails_go_proto",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/errors/server/BUILD.bazel grpc-go/examples/features/errors/server/BUILD.bazel
--- grpc-go-old/examples/features/errors/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/errors/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/errors/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//examples/helloworld/helloworld",
+        "//status",
+        "@go_googleapis//google/rpc:errdetails_go_proto",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/health/client/BUILD.bazel grpc-go/examples/features/health/client/BUILD.bazel
--- grpc-go-old/examples/features/health/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/health/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/health/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+        "//health",
+        "//resolver",
+        "//resolver/manual",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/health/server/BUILD.bazel grpc-go/examples/features/health/server/BUILD.bazel
--- grpc-go-old/examples/features/health/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/health/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/health/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//examples/features/proto/echo",
+        "//health",
+        "//health/grpc_health_v1",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/interceptor/client/BUILD.bazel grpc-go/examples/features/interceptor/client/BUILD.bazel
--- grpc-go-old/examples/features/interceptor/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/interceptor/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/interceptor/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//credentials/oauth",
+        "//examples/data",
+        "//examples/features/proto/echo",
+        "@org_golang_x_oauth2//:go_default_library",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/interceptor/server/BUILD.bazel grpc-go/examples/features/interceptor/server/BUILD.bazel
--- grpc-go-old/examples/features/interceptor/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/interceptor/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/interceptor/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials",
+        "//examples/data",
+        "//examples/features/proto/echo",
+        "//metadata",
+        "//status",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/keepalive/client/BUILD.bazel grpc-go/examples/features/keepalive/client/BUILD.bazel
--- grpc-go-old/examples/features/keepalive/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/keepalive/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/keepalive/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+        "//keepalive",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/keepalive/server/BUILD.bazel grpc-go/examples/features/keepalive/server/BUILD.bazel
--- grpc-go-old/examples/features/keepalive/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/keepalive/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/keepalive/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//examples/features/proto/echo",
+        "//keepalive",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/load_balancing/client/BUILD.bazel grpc-go/examples/features/load_balancing/client/BUILD.bazel
--- grpc-go-old/examples/features/load_balancing/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/load_balancing/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/load_balancing/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+        "//resolver",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/load_balancing/server/BUILD.bazel grpc-go/examples/features/load_balancing/server/BUILD.bazel
--- grpc-go-old/examples/features/load_balancing/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/load_balancing/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/load_balancing/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/metadata/client/BUILD.bazel grpc-go/examples/features/metadata/client/BUILD.bazel
--- grpc-go-old/examples/features/metadata/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/metadata/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/metadata/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+        "//metadata",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/metadata/server/BUILD.bazel grpc-go/examples/features/metadata/server/BUILD.bazel
--- grpc-go-old/examples/features/metadata/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/metadata/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/metadata/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//examples/features/proto/echo",
+        "//metadata",
+        "//status",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/multiplex/client/BUILD.bazel grpc-go/examples/features/multiplex/client/BUILD.bazel
--- grpc-go-old/examples/features/multiplex/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/multiplex/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/multiplex/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+        "//examples/helloworld/helloworld",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/multiplex/server/BUILD.bazel grpc-go/examples/features/multiplex/server/BUILD.bazel
--- grpc-go-old/examples/features/multiplex/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/multiplex/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/multiplex/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//examples/features/proto/echo",
+        "//examples/helloworld/helloworld",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/name_resolving/client/BUILD.bazel grpc-go/examples/features/name_resolving/client/BUILD.bazel
--- grpc-go-old/examples/features/name_resolving/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/name_resolving/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/name_resolving/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+        "//resolver",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/name_resolving/server/BUILD.bazel grpc-go/examples/features/name_resolving/server/BUILD.bazel
--- grpc-go-old/examples/features/name_resolving/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/name_resolving/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/name_resolving/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/proto/echo/BUILD.bazel grpc-go/examples/features/proto/echo/BUILD.bazel
--- grpc-go-old/examples/features/proto/echo/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/proto/echo/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,24 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "echo_proto",
+    srcs = ["echo.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "echo_go_proto",
+    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
+    importpath = "google.golang.org/grpc/examples/features/proto/echo",
+    proto = ":echo_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "echo",
+    embed = [":echo_go_proto"],
+    importpath = "google.golang.org/grpc/examples/features/proto/echo",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/reflection/server/BUILD.bazel grpc-go/examples/features/reflection/server/BUILD.bazel
--- grpc-go-old/examples/features/reflection/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/reflection/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/reflection/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//examples/features/proto/echo",
+        "//examples/helloworld/helloworld",
+        "//reflection",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/retry/client/BUILD.bazel grpc-go/examples/features/retry/client/BUILD.bazel
--- grpc-go-old/examples/features/retry/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/retry/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/retry/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/retry/server/BUILD.bazel grpc-go/examples/features/retry/server/BUILD.bazel
--- grpc-go-old/examples/features/retry/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/retry/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/retry/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//examples/features/proto/echo",
+        "//status",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/unix_abstract/client/BUILD.bazel grpc-go/examples/features/unix_abstract/client/BUILD.bazel
--- grpc-go-old/examples/features/unix_abstract/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/unix_abstract/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/unix_abstract/client",
+    visibility = ["//visibility:private"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//:grpc",
+            "//credentials/insecure",
+            "//examples/features/proto/echo",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//:grpc",
+            "//credentials/insecure",
+            "//examples/features/proto/echo",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/unix_abstract/server/BUILD.bazel grpc-go/examples/features/unix_abstract/server/BUILD.bazel
--- grpc-go-old/examples/features/unix_abstract/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/unix_abstract/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/unix_abstract/server",
+    visibility = ["//visibility:private"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//:grpc",
+            "//examples/features/proto/echo",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//:grpc",
+            "//examples/features/proto/echo",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/wait_for_ready/BUILD.bazel grpc-go/examples/features/wait_for_ready/BUILD.bazel
--- grpc-go-old/examples/features/wait_for_ready/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/wait_for_ready/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "wait_for_ready_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/wait_for_ready",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials/insecure",
+        "//examples/features/proto/echo",
+        "//status",
+    ],
+)
+
+go_binary(
+    name = "wait_for_ready",
+    embed = [":wait_for_ready_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/xds/client/BUILD.bazel grpc-go/examples/features/xds/client/BUILD.bazel
--- grpc-go-old/examples/features/xds/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/xds/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/xds/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//credentials/xds",
+        "//examples/helloworld/helloworld",
+        "//xds",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/features/xds/server/BUILD.bazel grpc-go/examples/features/xds/server/BUILD.bazel
--- grpc-go-old/examples/features/xds/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/features/xds/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/features/xds/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//credentials/xds",
+        "//examples/helloworld/helloworld",
+        "//health",
+        "//health/grpc_health_v1",
+        "//xds",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/helloworld/greeter_client/BUILD.bazel grpc-go/examples/helloworld/greeter_client/BUILD.bazel
--- grpc-go-old/examples/helloworld/greeter_client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/helloworld/greeter_client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "greeter_client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/helloworld/greeter_client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//examples/helloworld/helloworld",
+    ],
+)
+
+go_binary(
+    name = "greeter_client",
+    embed = [":greeter_client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/helloworld/greeter_server/BUILD.bazel grpc-go/examples/helloworld/greeter_server/BUILD.bazel
--- grpc-go-old/examples/helloworld/greeter_server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/helloworld/greeter_server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "greeter_server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/examples/helloworld/greeter_server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//examples/helloworld/helloworld",
+    ],
+)
+
+go_binary(
+    name = "greeter_server",
+    embed = [":greeter_server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/helloworld/helloworld/BUILD.bazel grpc-go/examples/helloworld/helloworld/BUILD.bazel
--- grpc-go-old/examples/helloworld/helloworld/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/helloworld/helloworld/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,24 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "helloworld_proto",
+    srcs = ["helloworld.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "helloworld_go_proto",
+    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
+    importpath = "google.golang.org/grpc/examples/helloworld/helloworld",
+    proto = ":helloworld_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "helloworld",
+    embed = [":helloworld_go_proto"],
+    importpath = "google.golang.org/grpc/examples/helloworld/helloworld",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/route_guide/client/BUILD.bazel grpc-go/examples/route_guide/client/BUILD.bazel
--- grpc-go-old/examples/route_guide/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/route_guide/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["client.go"],
+    importpath = "google.golang.org/grpc/examples/route_guide/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//credentials/insecure",
+        "//examples/data",
+        "//examples/route_guide/routeguide",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/route_guide/routeguide/BUILD.bazel grpc-go/examples/route_guide/routeguide/BUILD.bazel
--- grpc-go-old/examples/route_guide/routeguide/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/route_guide/routeguide/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,24 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "routeguide_proto",
+    srcs = ["route_guide.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "routeguide_go_proto",
+    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
+    importpath = "google.golang.org/grpc/examples/route_guide/routeguide",
+    proto = ":routeguide_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "routeguide",
+    embed = [":routeguide_go_proto"],
+    importpath = "google.golang.org/grpc/examples/route_guide/routeguide",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/examples/route_guide/server/BUILD.bazel grpc-go/examples/route_guide/server/BUILD.bazel
--- grpc-go-old/examples/route_guide/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/examples/route_guide/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["server.go"],
+    importpath = "google.golang.org/grpc/examples/route_guide/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//examples/data",
+        "//examples/route_guide/routeguide",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/gcp/observability/BUILD.bazel grpc-go/gcp/observability/BUILD.bazel
--- grpc-go-old/gcp/observability/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/gcp/observability/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,54 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "observability",
+    srcs = [
+        "config.go",
+        "exporting.go",
+        "logging.go",
+        "observability.go",
+        "opencensus.go",
+    ],
+    importpath = "google.golang.org/grpc/gcp/observability",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//binarylog/grpc_binarylog_v1",
+        "//grpclog",
+        "//internal",
+        "//internal/binarylog",
+        "//internal/envconfig",
+        "//internal/grpcutil",
+        "@com_github_google_uuid//:go_default_library",
+        "@com_google_cloud_go_logging//:go_default_library",
+        "@io_opencensus_go//plugin/ocgrpc:go_default_library",
+        "@io_opencensus_go//stats/view:go_default_library",
+        "@io_opencensus_go//trace:go_default_library",
+        "@io_opencensus_go_contrib_exporter_stackdriver//:go_default_library",
+        "@io_opencensus_go_contrib_exporter_stackdriver//monitoredresource:go_default_library",
+        "@org_golang_x_oauth2//google:go_default_library",
+    ],
+)
+
+go_test(
+    name = "observability_test",
+    srcs = [
+        "logging_test.go",
+        "observability_test.go",
+    ],
+    embed = [":observability"],
+    deps = [
+        "//binarylog/grpc_binarylog_v1",
+        "//internal/envconfig",
+        "//internal/grpctest",
+        "//internal/leakcheck",
+        "//internal/stubserver",
+        "//metadata",
+        "//test/grpc_testing",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@com_google_cloud_go_logging//:go_default_library",
+        "@io_opencensus_go//stats/view:go_default_library",
+        "@io_opencensus_go//trace:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/grpclog/BUILD.bazel grpc-go/grpclog/BUILD.bazel
--- grpc-go-old/grpclog/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/grpclog/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "grpclog",
+    srcs = [
+        "component.go",
+        "grpclog.go",
+        "logger.go",
+        "loggerv2.go",
+    ],
+    importpath = "google.golang.org/grpc/grpclog",
+    visibility = ["//visibility:public"],
+    deps = ["//internal/grpclog"],
+)
+
+go_test(
+    name = "grpclog_test",
+    srcs = ["loggerv2_test.go"],
+    embed = [":grpclog"],
+)
diff -Naru grpc-go-old/grpclog/glogger/BUILD.bazel grpc-go/grpclog/glogger/BUILD.bazel
--- grpc-go-old/grpclog/glogger/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/grpclog/glogger/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "glogger",
+    srcs = ["glogger.go"],
+    importpath = "google.golang.org/grpc/grpclog/glogger",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//grpclog",
+        "@com_github_golang_glog//:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/health/BUILD.bazel grpc-go/health/BUILD.bazel
--- grpc-go-old/health/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/health/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "health",
+    srcs = [
+        "client.go",
+        "logging.go",
+        "server.go",
+    ],
+    importpath = "google.golang.org/grpc/health",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//connectivity",
+        "//grpclog",
+        "//health/grpc_health_v1",
+        "//internal",
+        "//internal/backoff",
+        "//status",
+    ],
+)
+
+go_test(
+    name = "health_test",
+    srcs = [
+        "client_test.go",
+        "server_internal_test.go",
+        "server_test.go",
+    ],
+    embed = [":health"],
+    deps = [
+        "//:grpc",
+        "//connectivity",
+        "//health/grpc_health_v1",
+        "//internal/grpctest",
+    ],
+)
diff -Naru grpc-go-old/health/grpc_health_v1/BUILD.bazel grpc-go/health/grpc_health_v1/BUILD.bazel
--- grpc-go-old/health/grpc_health_v1/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/health/grpc_health_v1/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_health_v1",
+    srcs = [
+        "health.pb.go",
+        "health_grpc.pb.go",
+    ],
+    importpath = "google.golang.org/grpc/health/grpc_health_v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//runtime/protoimpl:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/BUILD.bazel grpc-go/internal/BUILD.bazel
--- grpc-go-old/internal/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = [
+        "internal.go",
+        "xds_handshake_cluster.go",
+    ],
+    importpath = "google.golang.org/grpc/internal",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//attributes",
+        "//connectivity",
+        "//resolver",
+        "//serviceconfig",
+    ],
+)
diff -Naru grpc-go-old/internal/admin/BUILD.bazel grpc-go/internal/admin/BUILD.bazel
--- grpc-go-old/internal/admin/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/admin/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "admin",
+    srcs = ["admin.go"],
+    importpath = "google.golang.org/grpc/internal/admin",
+    visibility = ["//:__subpackages__"],
+    deps = ["//:grpc"],
+)
diff -Naru grpc-go-old/internal/backoff/BUILD.bazel grpc-go/internal/backoff/BUILD.bazel
--- grpc-go-old/internal/backoff/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/backoff/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "backoff",
+    srcs = ["backoff.go"],
+    importpath = "google.golang.org/grpc/internal/backoff",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//backoff",
+        "//internal/grpcrand",
+    ],
+)
diff -Naru grpc-go-old/internal/balancer/gracefulswitch/BUILD.bazel grpc-go/internal/balancer/gracefulswitch/BUILD.bazel
--- grpc-go-old/internal/balancer/gracefulswitch/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/balancer/gracefulswitch/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "gracefulswitch",
+    srcs = ["gracefulswitch.go"],
+    importpath = "google.golang.org/grpc/internal/balancer/gracefulswitch",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//balancer/base",
+        "//connectivity",
+        "//resolver",
+    ],
+)
+
+go_test(
+    name = "gracefulswitch_test",
+    srcs = ["gracefulswitch_test.go"],
+    embed = [":gracefulswitch"],
+    deps = [
+        "//balancer",
+        "//connectivity",
+        "//internal/grpcsync",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//resolver",
+        "//serviceconfig",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/balancer/stub/BUILD.bazel grpc-go/internal/balancer/stub/BUILD.bazel
--- grpc-go-old/internal/balancer/stub/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/balancer/stub/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stub",
+    srcs = ["stub.go"],
+    importpath = "google.golang.org/grpc/internal/balancer/stub",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//serviceconfig",
+    ],
+)
diff -Naru grpc-go-old/internal/balancergroup/BUILD.bazel grpc-go/internal/balancergroup/BUILD.bazel
--- grpc-go-old/internal/balancergroup/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/balancergroup/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "balancergroup",
+    srcs = [
+        "balancergroup.go",
+        "balancerstateaggregator.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/balancergroup",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//connectivity",
+        "//internal/balancer/gracefulswitch",
+        "//internal/cache",
+        "//internal/grpclog",
+        "//resolver",
+    ],
+)
+
+go_test(
+    name = "balancergroup_test",
+    srcs = ["balancergroup_test.go"],
+    embed = [":balancergroup"],
+    deps = [
+        "//:grpc",
+        "//balancer",
+        "//balancer/roundrobin",
+        "//balancer/weightedtarget/weightedaggregator",
+        "//connectivity",
+        "//credentials/insecure",
+        "//internal/balancer/stub",
+        "//internal/channelz",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//resolver",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/balancerload/BUILD.bazel grpc-go/internal/balancerload/BUILD.bazel
--- grpc-go-old/internal/balancerload/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/balancerload/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "balancerload",
+    srcs = ["load.go"],
+    importpath = "google.golang.org/grpc/internal/balancerload",
+    visibility = ["//:__subpackages__"],
+    deps = ["//metadata"],
+)
diff -Naru grpc-go-old/internal/binarylog/BUILD.bazel grpc-go/internal/binarylog/BUILD.bazel
--- grpc-go-old/internal/binarylog/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/binarylog/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "binarylog",
+    srcs = [
+        "binarylog.go",
+        "binarylog_testutil.go",
+        "env_config.go",
+        "method_logger.go",
+        "sink.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/binarylog",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//binarylog/grpc_binarylog_v1",
+        "//grpclog",
+        "//internal/grpcutil",
+        "//metadata",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+    ],
+)
+
+go_test(
+    name = "binarylog_test",
+    srcs = [
+        "binarylog_test.go",
+        "env_config_test.go",
+        "method_logger_test.go",
+        "regexp_test.go",
+    ],
+    embed = [":binarylog"],
+    deps = [
+        "//binarylog/grpc_binarylog_v1",
+        "//codes",
+        "//internal/grpctest",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+    ],
+)
diff -Naru grpc-go-old/internal/buffer/BUILD.bazel grpc-go/internal/buffer/BUILD.bazel
--- grpc-go-old/internal/buffer/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/buffer/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "buffer",
+    srcs = ["unbounded.go"],
+    importpath = "google.golang.org/grpc/internal/buffer",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "buffer_test",
+    srcs = ["unbounded_test.go"],
+    embed = [":buffer"],
+    deps = ["//internal/grpctest"],
+)
diff -Naru grpc-go-old/internal/cache/BUILD.bazel grpc-go/internal/cache/BUILD.bazel
--- grpc-go-old/internal/cache/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/cache/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "cache",
+    srcs = ["timeoutCache.go"],
+    importpath = "google.golang.org/grpc/internal/cache",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "cache_test",
+    srcs = ["timeoutCache_test.go"],
+    embed = [":cache"],
+    deps = ["//internal/grpctest"],
+)
diff -Naru grpc-go-old/internal/channelz/BUILD.bazel grpc-go/internal/channelz/BUILD.bazel
--- grpc-go-old/internal/channelz/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/channelz/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,48 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "channelz",
+    srcs = [
+        "funcs.go",
+        "id.go",
+        "logging.go",
+        "types.go",
+        "types_linux.go",
+        "types_nonlinux.go",
+        "util_linux.go",
+        "util_nonlinux.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/channelz",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//connectivity",
+        "//credentials",
+        "//grpclog",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_test(
+    name = "channelz_test",
+    srcs = ["util_test.go"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            ":channelz",
+            "//internal/grpctest",
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            ":channelz",
+            "//internal/grpctest",
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -Naru grpc-go-old/internal/credentials/BUILD.bazel grpc-go/internal/credentials/BUILD.bazel
--- grpc-go-old/internal/credentials/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/credentials/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "credentials",
+    srcs = [
+        "credentials.go",
+        "spiffe.go",
+        "syscallconn.go",
+        "util.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/credentials",
+    visibility = ["//:__subpackages__"],
+    deps = ["//grpclog"],
+)
+
+go_test(
+    name = "credentials_test",
+    srcs = [
+        "spiffe_test.go",
+        "syscallconn_test.go",
+        "util_test.go",
+    ],
+    embed = [":credentials"],
+    deps = [
+        "//internal/grpctest",
+        "//testdata",
+    ],
+)
diff -Naru grpc-go-old/internal/credentials/xds/BUILD.bazel grpc-go/internal/credentials/xds/BUILD.bazel
--- grpc-go-old/internal/credentials/xds/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/credentials/xds/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "xds",
+    srcs = ["handshake_info.go"],
+    importpath = "google.golang.org/grpc/internal/credentials/xds",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//attributes",
+        "//credentials/tls/certprovider",
+        "//internal",
+        "//internal/xds/matcher",
+        "//resolver",
+    ],
+)
+
+go_test(
+    name = "xds_test",
+    srcs = ["handshake_info_test.go"],
+    embed = [":xds"],
+    deps = ["//internal/xds/matcher"],
+)
diff -Naru grpc-go-old/internal/envconfig/BUILD.bazel grpc-go/internal/envconfig/BUILD.bazel
--- grpc-go-old/internal/envconfig/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/envconfig/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "envconfig",
+    srcs = [
+        "envconfig.go",
+        "observability.go",
+        "xds.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/envconfig",
+    visibility = ["//:__subpackages__"],
+)
diff -Naru grpc-go-old/internal/googlecloud/BUILD.bazel grpc-go/internal/googlecloud/BUILD.bazel
--- grpc-go-old/internal/googlecloud/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/googlecloud/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "googlecloud",
+    srcs = [
+        "googlecloud.go",
+        "manufacturer.go",
+        "manufacturer_linux.go",
+        "manufacturer_windows.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/googlecloud",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//grpclog",
+        "//internal/grpclog",
+    ],
+)
+
+go_test(
+    name = "googlecloud_test",
+    srcs = ["googlecloud_test.go"],
+    embed = [":googlecloud"],
+)
diff -Naru grpc-go-old/internal/grpclog/BUILD.bazel grpc-go/internal/grpclog/BUILD.bazel
--- grpc-go-old/internal/grpclog/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/grpclog/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,11 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpclog",
+    srcs = [
+        "grpclog.go",
+        "prefixLogger.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/grpclog",
+    visibility = ["//:__subpackages__"],
+)
diff -Naru grpc-go-old/internal/grpcrand/BUILD.bazel grpc-go/internal/grpcrand/BUILD.bazel
--- grpc-go-old/internal/grpcrand/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/grpcrand/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpcrand",
+    srcs = ["grpcrand.go"],
+    importpath = "google.golang.org/grpc/internal/grpcrand",
+    visibility = ["//:__subpackages__"],
+)
diff -Naru grpc-go-old/internal/grpcsync/BUILD.bazel grpc-go/internal/grpcsync/BUILD.bazel
--- grpc-go-old/internal/grpcsync/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/grpcsync/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "grpcsync",
+    srcs = ["event.go"],
+    importpath = "google.golang.org/grpc/internal/grpcsync",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "grpcsync_test",
+    srcs = ["event_test.go"],
+    embed = [":grpcsync"],
+    deps = ["//internal/grpctest"],
+)
diff -Naru grpc-go-old/internal/grpctest/BUILD.bazel grpc-go/internal/grpctest/BUILD.bazel
--- grpc-go-old/internal/grpctest/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/grpctest/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "grpctest",
+    srcs = [
+        "grpctest.go",
+        "tlogger.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/grpctest",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//grpclog",
+        "//internal/leakcheck",
+    ],
+)
+
+go_test(
+    name = "grpctest_test",
+    srcs = [
+        "example_test.go",
+        "grpctest_test.go",
+        "tlogger_test.go",
+    ],
+    embed = [":grpctest"],
+    deps = [
+        "//grpclog",
+        "//internal/grpclog",
+    ],
+)
diff -Naru grpc-go-old/internal/grpcutil/BUILD.bazel grpc-go/internal/grpcutil/BUILD.bazel
--- grpc-go-old/internal/grpcutil/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/grpcutil/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "grpcutil",
+    srcs = [
+        "encode_duration.go",
+        "grpcutil.go",
+        "metadata.go",
+        "method.go",
+        "regex.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/grpcutil",
+    visibility = ["//:__subpackages__"],
+    deps = ["//metadata"],
+)
+
+go_test(
+    name = "grpcutil_test",
+    srcs = [
+        "encode_duration_test.go",
+        "method_test.go",
+        "regex_test.go",
+    ],
+    embed = [":grpcutil"],
+)
diff -Naru grpc-go-old/internal/hierarchy/BUILD.bazel grpc-go/internal/hierarchy/BUILD.bazel
--- grpc-go-old/internal/hierarchy/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/hierarchy/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "hierarchy",
+    srcs = ["hierarchy.go"],
+    importpath = "google.golang.org/grpc/internal/hierarchy",
+    visibility = ["//:__subpackages__"],
+    deps = ["//resolver"],
+)
+
+go_test(
+    name = "hierarchy_test",
+    srcs = ["hierarchy_test.go"],
+    embed = [":hierarchy"],
+    deps = [
+        "//attributes",
+        "//resolver",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/leakcheck/BUILD.bazel grpc-go/internal/leakcheck/BUILD.bazel
--- grpc-go-old/internal/leakcheck/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/leakcheck/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "leakcheck",
+    srcs = ["leakcheck.go"],
+    importpath = "google.golang.org/grpc/internal/leakcheck",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "leakcheck_test",
+    srcs = ["leakcheck_test.go"],
+    embed = [":leakcheck"],
+)
diff -Naru grpc-go-old/internal/metadata/BUILD.bazel grpc-go/internal/metadata/BUILD.bazel
--- grpc-go-old/internal/metadata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/metadata/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "metadata",
+    srcs = ["metadata.go"],
+    importpath = "google.golang.org/grpc/internal/metadata",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//metadata",
+        "//resolver",
+    ],
+)
+
+go_test(
+    name = "metadata_test",
+    srcs = ["metadata_test.go"],
+    embed = [":metadata"],
+    deps = [
+        "//attributes",
+        "//metadata",
+        "//resolver",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/pretty/BUILD.bazel grpc-go/internal/pretty/BUILD.bazel
--- grpc-go-old/internal/pretty/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/pretty/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pretty",
+    srcs = ["pretty.go"],
+    importpath = "google.golang.org/grpc/internal/pretty",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "@com_github_golang_protobuf//jsonpb:go_default_library_gen",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//encoding/protojson:go_default_library",
+        "@org_golang_google_protobuf//proto:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/profiling/BUILD.bazel grpc-go/internal/profiling/BUILD.bazel
--- grpc-go-old/internal/profiling/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/profiling/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "profiling",
+    srcs = [
+        "goid_regular.go",
+        "profiling.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/profiling",
+    visibility = ["//:__subpackages__"],
+    deps = ["//internal/profiling/buffer"],
+)
+
+go_test(
+    name = "profiling_test",
+    srcs = ["profiling_test.go"],
+    embed = [":profiling"],
+    deps = [
+        "//internal/grpctest",
+        "//internal/profiling/buffer",
+    ],
+)
diff -Naru grpc-go-old/internal/profiling/buffer/BUILD.bazel grpc-go/internal/profiling/buffer/BUILD.bazel
--- grpc-go-old/internal/profiling/buffer/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/profiling/buffer/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "buffer",
+    srcs = ["buffer.go"],
+    importpath = "google.golang.org/grpc/internal/profiling/buffer",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "buffer_test",
+    srcs = ["buffer_test.go"],
+    embed = [":buffer"],
+    deps = ["//internal/grpctest"],
+)
diff -Naru grpc-go-old/internal/proto/grpc_lookup_v1/BUILD.bazel grpc-go/internal/proto/grpc_lookup_v1/BUILD.bazel
--- grpc-go-old/internal/proto/grpc_lookup_v1/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/proto/grpc_lookup_v1/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_lookup_v1",
+    srcs = [
+        "rls.pb.go",
+        "rls_config.pb.go",
+        "rls_grpc.pb.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/proto/grpc_lookup_v1",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//runtime/protoimpl:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/resolver/BUILD.bazel grpc-go/internal/resolver/BUILD.bazel
--- grpc-go-old/internal/resolver/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/resolver/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "resolver",
+    srcs = ["config_selector.go"],
+    importpath = "google.golang.org/grpc/internal/resolver",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//internal/serviceconfig",
+        "//metadata",
+        "//resolver",
+    ],
+)
+
+go_test(
+    name = "resolver_test",
+    srcs = ["config_selector_test.go"],
+    embed = [":resolver"],
+    deps = [
+        "//internal/grpctest",
+        "//internal/serviceconfig",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/resolver/dns/BUILD.bazel grpc-go/internal/resolver/dns/BUILD.bazel
--- grpc-go-old/internal/resolver/dns/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/resolver/dns/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "dns",
+    srcs = ["dns_resolver.go"],
+    importpath = "google.golang.org/grpc/internal/resolver/dns",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//balancer/grpclb/state",
+        "//grpclog",
+        "//internal/backoff",
+        "//internal/envconfig",
+        "//internal/grpcrand",
+        "//resolver",
+        "//serviceconfig",
+    ],
+)
+
+go_test(
+    name = "dns_test",
+    srcs = ["dns_resolver_test.go"],
+    embed = [":dns"],
+    deps = [
+        "//balancer",
+        "//balancer/grpclb/state",
+        "//internal/envconfig",
+        "//internal/leakcheck",
+        "//internal/testutils",
+        "//resolver",
+        "//serviceconfig",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/resolver/passthrough/BUILD.bazel grpc-go/internal/resolver/passthrough/BUILD.bazel
--- grpc-go-old/internal/resolver/passthrough/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/resolver/passthrough/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "passthrough",
+    srcs = ["passthrough.go"],
+    importpath = "google.golang.org/grpc/internal/resolver/passthrough",
+    visibility = ["//:__subpackages__"],
+    deps = ["//resolver"],
+)
diff -Naru grpc-go-old/internal/resolver/unix/BUILD.bazel grpc-go/internal/resolver/unix/BUILD.bazel
--- grpc-go-old/internal/resolver/unix/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/resolver/unix/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "unix",
+    srcs = ["unix.go"],
+    importpath = "google.golang.org/grpc/internal/resolver/unix",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//internal/transport/networktype",
+        "//resolver",
+    ],
+)
diff -Naru grpc-go-old/internal/serviceconfig/BUILD.bazel grpc-go/internal/serviceconfig/BUILD.bazel
--- grpc-go-old/internal/serviceconfig/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/serviceconfig/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "serviceconfig",
+    srcs = ["serviceconfig.go"],
+    importpath = "google.golang.org/grpc/internal/serviceconfig",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//codes",
+        "//grpclog",
+        "//serviceconfig",
+    ],
+)
+
+go_test(
+    name = "serviceconfig_test",
+    srcs = ["serviceconfig_test.go"],
+    embed = [":serviceconfig"],
+    deps = [
+        "//balancer",
+        "//serviceconfig",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/status/BUILD.bazel grpc-go/internal/status/BUILD.bazel
--- grpc-go-old/internal/status/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/status/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "status",
+    srcs = ["status.go"],
+    importpath = "google.golang.org/grpc/internal/status",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//codes",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@go_googleapis//google/rpc:status_go_proto",
+    ],
+)
diff -Naru grpc-go-old/internal/stubserver/BUILD.bazel grpc-go/internal/stubserver/BUILD.bazel
--- grpc-go-old/internal/stubserver/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/stubserver/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stubserver",
+    srcs = ["stubserver.go"],
+    importpath = "google.golang.org/grpc/internal/stubserver",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//connectivity",
+        "//credentials/insecure",
+        "//resolver",
+        "//resolver/manual",
+        "//serviceconfig",
+        "//test/grpc_testing",
+    ],
+)
diff -Naru grpc-go-old/internal/syscall/BUILD.bazel grpc-go/internal/syscall/BUILD.bazel
--- grpc-go-old/internal/syscall/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/syscall/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,58 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "syscall",
+    srcs = [
+        "syscall_linux.go",
+        "syscall_nonlinux.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/syscall",
+    visibility = ["//:__subpackages__"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//grpclog",
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//grpclog",
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//grpclog",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -Naru grpc-go-old/internal/testutils/BUILD.bazel grpc-go/internal/testutils/BUILD.bazel
--- grpc-go-old/internal/testutils/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/testutils/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,45 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "testutils",
+    srcs = [
+        "balancer.go",
+        "channel.go",
+        "http_client.go",
+        "local_listener.go",
+        "marshal_any.go",
+        "pipe_listener.go",
+        "restartable_listener.go",
+        "status_equal.go",
+        "wrappers.go",
+        "wrr.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/testutils",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//connectivity",
+        "//internal/wrr",
+        "//resolver",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+    ],
+)
+
+go_test(
+    name = "testutils_test",
+    srcs = [
+        "pipe_listener_test.go",
+        "status_equal_test.go",
+    ],
+    embed = [":testutils"],
+    deps = [
+        "//codes",
+        "//internal/grpctest",
+        "//status",
+        "@go_googleapis//google/rpc:status_go_proto",
+        "@io_bazel_rules_go//proto/wkt:any_go_proto",
+    ],
+)
diff -Naru grpc-go-old/internal/testutils/fakegrpclb/BUILD.bazel grpc-go/internal/testutils/fakegrpclb/BUILD.bazel
--- grpc-go-old/internal/testutils/fakegrpclb/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/testutils/fakegrpclb/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fakegrpclb",
+    srcs = ["server.go"],
+    importpath = "google.golang.org/grpc/internal/testutils/fakegrpclb",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//balancer/grpclb/grpc_lb_v1",
+        "//codes",
+        "//grpclog",
+        "//internal/pretty",
+        "//status",
+    ],
+)
diff -Naru grpc-go-old/internal/testutils/rls/BUILD.bazel grpc-go/internal/testutils/rls/BUILD.bazel
--- grpc-go-old/internal/testutils/rls/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/testutils/rls/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "rls",
+    srcs = ["fake_rls_server.go"],
+    importpath = "google.golang.org/grpc/internal/testutils/rls",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//internal/proto/grpc_lookup_v1",
+        "//internal/testutils",
+        "//status",
+    ],
+)
diff -Naru grpc-go-old/internal/testutils/roundrobin/BUILD.bazel grpc-go/internal/testutils/roundrobin/BUILD.bazel
--- grpc-go-old/internal/testutils/roundrobin/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/testutils/roundrobin/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "roundrobin",
+    srcs = ["roundrobin.go"],
+    importpath = "google.golang.org/grpc/internal/testutils/roundrobin",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//grpclog",
+        "//peer",
+        "//resolver",
+        "//test/grpc_testing",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/testutils/xds/e2e/BUILD.bazel grpc-go/internal/testutils/xds/e2e/BUILD.bazel
--- grpc-go-old/internal/testutils/xds/e2e/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/testutils/xds/e2e/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "e2e",
+    srcs = [
+        "bootstrap.go",
+        "clientresources.go",
+        "logging.go",
+        "server.go",
+        "setup_certs.go",
+        "setup_management_server.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/testutils/xds/e2e",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//grpclog",
+        "//internal",
+        "//internal/testutils",
+        "//internal/xds",
+        "//resolver",
+        "//testdata",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/cluster/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/endpoint/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/router/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/transport_sockets/tls/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/discovery/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//pkg/cache/types:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//pkg/cache/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//pkg/resource/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//pkg/server/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//pkg/wellknown:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_uuid//:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
+    ],
+)
diff -Naru grpc-go-old/internal/transport/BUILD.bazel grpc-go/internal/transport/BUILD.bazel
--- grpc-go-old/internal/transport/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/transport/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,75 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "transport",
+    srcs = [
+        "bdp_estimator.go",
+        "controlbuf.go",
+        "defaults.go",
+        "flowcontrol.go",
+        "handler_server.go",
+        "http2_client.go",
+        "http2_server.go",
+        "http_util.go",
+        "proxy.go",
+        "transport.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/transport",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//codes",
+        "//credentials",
+        "//grpclog",
+        "//internal/channelz",
+        "//internal/credentials",
+        "//internal/grpcrand",
+        "//internal/grpcutil",
+        "//internal/metadata",
+        "//internal/syscall",
+        "//internal/transport/networktype",
+        "//keepalive",
+        "//metadata",
+        "//peer",
+        "//resolver",
+        "//stats",
+        "//status",
+        "//tap",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@go_googleapis//google/rpc:status_go_proto",
+        "@org_golang_x_net//http2:go_default_library",
+        "@org_golang_x_net//http2/hpack:go_default_library",
+    ],
+)
+
+go_test(
+    name = "transport_test",
+    srcs = [
+        "handler_server_test.go",
+        "http_util_test.go",
+        "keepalive_test.go",
+        "proxy_test.go",
+        "transport_test.go",
+    ],
+    embed = [":transport"],
+    deps = [
+        "//attributes",
+        "//codes",
+        "//credentials",
+        "//internal/channelz",
+        "//internal/grpctest",
+        "//internal/leakcheck",
+        "//internal/syscall",
+        "//internal/testutils",
+        "//keepalive",
+        "//metadata",
+        "//peer",
+        "//resolver",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@go_googleapis//google/rpc:errdetails_go_proto",
+        "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+        "@org_golang_x_net//http2:go_default_library",
+        "@org_golang_x_net//http2/hpack:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/transport/networktype/BUILD.bazel grpc-go/internal/transport/networktype/BUILD.bazel
--- grpc-go-old/internal/transport/networktype/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/transport/networktype/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "networktype",
+    srcs = ["networktype.go"],
+    importpath = "google.golang.org/grpc/internal/transport/networktype",
+    visibility = ["//:__subpackages__"],
+    deps = ["//resolver"],
+)
diff -Naru grpc-go-old/internal/wrr/BUILD.bazel grpc-go/internal/wrr/BUILD.bazel
--- grpc-go-old/internal/wrr/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/wrr/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "wrr",
+    srcs = [
+        "edf.go",
+        "random.go",
+        "wrr.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/wrr",
+    visibility = ["//:__subpackages__"],
+    deps = ["//internal/grpcrand"],
+)
+
+go_test(
+    name = "wrr_test",
+    srcs = [
+        "edf_test.go",
+        "wrr_test.go",
+    ],
+    embed = [":wrr"],
+    deps = [
+        "//internal/grpctest",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/xds/BUILD.bazel grpc-go/internal/xds/BUILD.bazel
--- grpc-go-old/internal/xds/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/xds/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "xds",
+    srcs = ["bootstrap.go"],
+    importpath = "google.golang.org/grpc/internal/xds",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//grpclog",
+        "//internal/envconfig",
+    ],
+)
diff -Naru grpc-go-old/internal/xds/matcher/BUILD.bazel grpc-go/internal/xds/matcher/BUILD.bazel
--- grpc-go-old/internal/xds/matcher/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/xds/matcher/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "matcher",
+    srcs = [
+        "matcher_header.go",
+        "string_matcher.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/xds/matcher",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//internal/grpcutil",
+        "//metadata",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/matcher/v3:go_default_library",
+    ],
+)
+
+go_test(
+    name = "matcher_test",
+    srcs = [
+        "matcher_header_test.go",
+        "string_matcher_test.go",
+    ],
+    embed = [":matcher"],
+    deps = [
+        "//metadata",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/matcher/v3:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/internal/xds/rbac/BUILD.bazel grpc-go/internal/xds/rbac/BUILD.bazel
--- grpc-go-old/internal/xds/rbac/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/internal/xds/rbac/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,47 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "rbac",
+    srcs = [
+        "matchers.go",
+        "rbac_engine.go",
+    ],
+    importpath = "google.golang.org/grpc/internal/xds/rbac",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials",
+        "//grpclog",
+        "//internal/transport",
+        "//internal/xds/matcher",
+        "//metadata",
+        "//peer",
+        "//status",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/rbac/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/matcher/v3:go_default_library",
+    ],
+)
+
+go_test(
+    name = "rbac_test",
+    srcs = ["rbac_engine_test.go"],
+    embed = [":rbac"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials",
+        "//internal/grpctest",
+        "//metadata",
+        "//peer",
+        "//status",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/rbac/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/matcher/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
+    ],
+)
diff -Naru grpc-go-old/interop/BUILD.bazel grpc-go/interop/BUILD.bazel
--- grpc-go-old/interop/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "interop",
+    srcs = ["test_utils.go"],
+    importpath = "google.golang.org/grpc/interop",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//benchmark/stats",
+        "//codes",
+        "//grpclog",
+        "//interop/grpc_testing",
+        "//metadata",
+        "//peer",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_x_oauth2//:go_default_library",
+        "@org_golang_x_oauth2//google:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/interop/alts/client/BUILD.bazel grpc-go/interop/alts/client/BUILD.bazel
--- grpc-go-old/interop/alts/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/alts/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["client.go"],
+    importpath = "google.golang.org/grpc/interop/alts/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/alts",
+        "//grpclog",
+        "//interop/grpc_testing",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/interop/alts/server/BUILD.bazel grpc-go/interop/alts/server/BUILD.bazel
--- grpc-go-old/interop/alts/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/alts/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["server.go"],
+    importpath = "google.golang.org/grpc/interop/alts/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/alts",
+        "//grpclog",
+        "//interop",
+        "//interop/grpc_testing",
+        "//tap",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/interop/client/BUILD.bazel grpc-go/interop/client/BUILD.bazel
--- grpc-go-old/interop/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["client.go"],
+    importpath = "google.golang.org/grpc/interop/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//balancer/grpclb",
+        "//balancer/rls",
+        "//credentials",
+        "//credentials/alts",
+        "//credentials/google",
+        "//credentials/insecure",
+        "//credentials/oauth",
+        "//grpclog",
+        "//interop",
+        "//interop/grpc_testing",
+        "//resolver",
+        "//testdata",
+        "//xds/googledirectpath",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/interop/fake_grpclb/BUILD.bazel grpc-go/interop/fake_grpclb/BUILD.bazel
--- grpc-go-old/interop/fake_grpclb/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/fake_grpclb/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "fake_grpclb_lib",
+    srcs = ["fake_grpclb.go"],
+    importpath = "google.golang.org/grpc/interop/fake_grpclb",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//credentials/alts",
+        "//grpclog",
+        "//internal/testutils/fakegrpclb",
+        "//testdata",
+    ],
+)
+
+go_binary(
+    name = "fake_grpclb",
+    embed = [":fake_grpclb_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/interop/grpc_testing/BUILD.bazel grpc-go/interop/grpc_testing/BUILD.bazel
--- grpc-go-old/interop/grpc_testing/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/grpc_testing/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_testing",
+    srcs = [
+        "benchmark_service.pb.go",
+        "benchmark_service_grpc.pb.go",
+        "control.pb.go",
+        "empty.pb.go",
+        "messages.pb.go",
+        "payloads.pb.go",
+        "report_qps_scenario_service.pb.go",
+        "report_qps_scenario_service_grpc.pb.go",
+        "stats.pb.go",
+        "test.pb.go",
+        "test_grpc.pb.go",
+        "worker_service.pb.go",
+        "worker_service_grpc.pb.go",
+    ],
+    importpath = "google.golang.org/grpc/interop/grpc_testing",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//interop/grpc_testing/core",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//runtime/protoimpl:go_default_library",
+        "@org_golang_google_protobuf//types/known/timestamppb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/interop/grpc_testing/core/BUILD.bazel grpc-go/interop/grpc_testing/core/BUILD.bazel
--- grpc-go-old/interop/grpc_testing/core/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/grpc_testing/core/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,13 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "core",
+    srcs = ["stats.pb.go"],
+    importpath = "google.golang.org/grpc/interop/grpc_testing/core",
+    visibility = ["//visibility:public"],
+    deps = [
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//runtime/protoimpl:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/interop/grpclb_fallback/BUILD.bazel grpc-go/interop/grpclb_fallback/BUILD.bazel
--- grpc-go-old/interop/grpclb_fallback/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/grpclb_fallback/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "grpclb_fallback_lib",
+    srcs = ["client_linux.go"],
+    importpath = "google.golang.org/grpc/interop/grpclb_fallback",
+    visibility = ["//visibility:private"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//:grpc",
+            "//balancer/grpclb",
+            "//credentials",
+            "//credentials/alts",
+            "//credentials/google",
+            "//interop/grpc_testing",
+            "//xds/googledirectpath",
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//:grpc",
+            "//balancer/grpclb",
+            "//credentials",
+            "//credentials/alts",
+            "//credentials/google",
+            "//interop/grpc_testing",
+            "//xds/googledirectpath",
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_binary(
+    name = "grpclb_fallback",
+    embed = [":grpclb_fallback_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/interop/http2/BUILD.bazel grpc-go/interop/http2/BUILD.bazel
--- grpc-go-old/interop/http2/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/http2/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "http2_lib",
+    srcs = ["negative_http2_client.go"],
+    importpath = "google.golang.org/grpc/interop/http2",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials/insecure",
+        "//grpclog",
+        "//interop",
+        "//interop/grpc_testing",
+        "//status",
+    ],
+)
+
+go_binary(
+    name = "http2",
+    embed = [":http2_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/interop/server/BUILD.bazel grpc-go/interop/server/BUILD.bazel
--- grpc-go-old/interop/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["server.go"],
+    importpath = "google.golang.org/grpc/interop/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//credentials/alts",
+        "//grpclog",
+        "//interop",
+        "//interop/grpc_testing",
+        "//testdata",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/interop/xds/client/BUILD.bazel grpc-go/interop/xds/client/BUILD.bazel
--- grpc-go-old/interop/xds/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/xds/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["client.go"],
+    importpath = "google.golang.org/grpc/interop/xds/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//admin",
+        "//credentials/insecure",
+        "//credentials/xds",
+        "//grpclog",
+        "//interop/grpc_testing",
+        "//metadata",
+        "//peer",
+        "//reflection",
+        "//status",
+        "//xds",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/interop/xds/server/BUILD.bazel grpc-go/interop/xds/server/BUILD.bazel
--- grpc-go-old/interop/xds/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/interop/xds/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["server.go"],
+    importpath = "google.golang.org/grpc/interop/xds/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//admin",
+        "//credentials/insecure",
+        "//credentials/xds",
+        "//grpclog",
+        "//health",
+        "//health/grpc_health_v1",
+        "//interop/grpc_testing",
+        "//metadata",
+        "//reflection",
+        "//xds",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/keepalive/BUILD.bazel grpc-go/keepalive/BUILD.bazel
--- grpc-go-old/keepalive/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/keepalive/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "keepalive",
+    srcs = ["keepalive.go"],
+    importpath = "google.golang.org/grpc/keepalive",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/metadata/BUILD.bazel grpc-go/metadata/BUILD.bazel
--- grpc-go-old/metadata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/metadata/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "metadata",
+    srcs = ["metadata.go"],
+    importpath = "google.golang.org/grpc/metadata",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "metadata_test",
+    srcs = ["metadata_test.go"],
+    embed = [":metadata"],
+    deps = ["//internal/grpctest"],
+)
diff -Naru grpc-go-old/orca/BUILD.bazel grpc-go/orca/BUILD.bazel
--- grpc-go-old/orca/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/orca/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,51 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "orca",
+    srcs = [
+        "call_metric_recorder.go",
+        "orca.go",
+        "service.go",
+    ],
+    importpath = "google.golang.org/grpc/orca",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//grpclog",
+        "//internal",
+        "//internal/balancerload",
+        "//metadata",
+        "//orca/internal",
+        "//status",
+        "@com_github_cncf_xds_go//xds/data/orca/v3:go_default_library",
+        "@com_github_cncf_xds_go//xds/service/orca/v3:go_default_library",
+        "@org_golang_google_protobuf//proto:go_default_library",
+    ],
+)
+
+go_test(
+    name = "orca_test",
+    srcs = [
+        "call_metric_recorder_test.go",
+        "orca_test.go",
+        "service_test.go",
+    ],
+    deps = [
+        ":orca",
+        "//:grpc",
+        "//credentials/insecure",
+        "//internal/grpctest",
+        "//internal/pretty",
+        "//internal/stubserver",
+        "//internal/testutils",
+        "//metadata",
+        "//orca/internal",
+        "//test/grpc_testing",
+        "@com_github_cncf_xds_go//xds/data/orca/v3:go_default_library",
+        "@com_github_cncf_xds_go//xds/service/orca/v3:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/orca/internal/BUILD.bazel grpc-go/orca/internal/BUILD.bazel
--- grpc-go-old/orca/internal/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/orca/internal/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = ["internal.go"],
+    importpath = "google.golang.org/grpc/orca/internal",
+    visibility = ["//orca:__subpackages__"],
+)
diff -Naru grpc-go-old/peer/BUILD.bazel grpc-go/peer/BUILD.bazel
--- grpc-go-old/peer/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/peer/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "peer",
+    srcs = ["peer.go"],
+    importpath = "google.golang.org/grpc/peer",
+    visibility = ["//visibility:public"],
+    deps = ["//credentials"],
+)
diff -Naru grpc-go-old/profiling/BUILD.bazel grpc-go/profiling/BUILD.bazel
--- grpc-go-old/profiling/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/profiling/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "profiling",
+    srcs = ["profiling.go"],
+    importpath = "google.golang.org/grpc/profiling",
+    visibility = ["//visibility:public"],
+    deps = ["//internal/profiling"],
+)
diff -Naru grpc-go-old/profiling/cmd/BUILD.bazel grpc-go/profiling/cmd/BUILD.bazel
--- grpc-go-old/profiling/cmd/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/profiling/cmd/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "cmd_lib",
+    srcs = [
+        "catapult.go",
+        "flags.go",
+        "local.go",
+        "main.go",
+        "remote.go",
+    ],
+    importpath = "google.golang.org/grpc/profiling/cmd",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//grpclog",
+        "//profiling/proto",
+    ],
+)
+
+go_binary(
+    name = "cmd",
+    embed = [":cmd_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/profiling/proto/BUILD.bazel grpc-go/profiling/proto/BUILD.bazel
--- grpc-go-old/profiling/proto/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/profiling/proto/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,24 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "proto_proto",
+    srcs = ["service.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "proto_go_proto",
+    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
+    importpath = "google.golang.org/grpc/profiling/proto",
+    proto = ":proto_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "proto",
+    embed = [":proto_go_proto"],
+    importpath = "google.golang.org/grpc/profiling/proto",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/profiling/service/BUILD.bazel grpc-go/profiling/service/BUILD.bazel
--- grpc-go-old/profiling/service/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/profiling/service/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "service",
+    srcs = ["service.go"],
+    importpath = "google.golang.org/grpc/profiling/service",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//grpclog",
+        "//internal/profiling",
+        "//profiling/proto",
+    ],
+)
diff -Naru grpc-go-old/reflection/BUILD.bazel grpc-go/reflection/BUILD.bazel
--- grpc-go-old/reflection/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/reflection/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "reflection",
+    srcs = ["serverreflection.go"],
+    importpath = "google.golang.org/grpc/reflection",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//reflection/grpc_reflection_v1alpha",
+        "//status",
+        "@org_golang_google_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//reflect/protodesc:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoregistry:go_default_library",
+    ],
+)
+
+go_test(
+    name = "reflection_test",
+    srcs = ["serverreflection_test.go"],
+    embed = [":reflection"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//internal/grpctest",
+        "//reflection/grpc_reflection_v1alpha",
+        "//reflection/grpc_testing",
+        "//reflection/grpc_testing_not_regenerate",
+        "@org_golang_google_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//reflect/protodesc:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
+        "@org_golang_google_protobuf//reflect/protoregistry:go_default_library",
+        "@org_golang_google_protobuf//types/descriptorpb:go_default_library",
+        "@org_golang_google_protobuf//types/dynamicpb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/reflection/grpc_reflection_v1alpha/BUILD.bazel grpc-go/reflection/grpc_reflection_v1alpha/BUILD.bazel
--- grpc-go-old/reflection/grpc_reflection_v1alpha/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/reflection/grpc_reflection_v1alpha/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,24 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "grpc_reflection_v1alpha_proto",
+    srcs = ["reflection.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "grpc_reflection_v1alpha_go_proto",
+    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
+    importpath = "google.golang.org/grpc/reflection/grpc_reflection_v1alpha",
+    proto = ":grpc_reflection_v1alpha_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "grpc_reflection_v1alpha",
+    embed = [":grpc_reflection_v1alpha_go_proto"],
+    importpath = "google.golang.org/grpc/reflection/grpc_reflection_v1alpha",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/reflection/grpc_testing/BUILD.bazel grpc-go/reflection/grpc_testing/BUILD.bazel
--- grpc-go-old/reflection/grpc_testing/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/reflection/grpc_testing/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,29 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "grpc_testing_proto",
+    srcs = [
+        "proto2.proto",
+        "proto2_ext.proto",
+        "proto2_ext2.proto",
+        "test.proto",
+    ],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "grpc_testing_go_proto",
+    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
+    importpath = "google.golang.org/grpc/reflection/grpc_testing",
+    proto = ":grpc_testing_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "grpc_testing",
+    embed = [":grpc_testing_go_proto"],
+    importpath = "google.golang.org/grpc/reflection/grpc_testing",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/reflection/grpc_testing_not_regenerate/BUILD.bazel grpc-go/reflection/grpc_testing_not_regenerate/BUILD.bazel
--- grpc-go-old/reflection/grpc_testing_not_regenerate/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/reflection/grpc_testing_not_regenerate/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_testing_not_regenerate",
+    srcs = [
+        "dynamic.pb.go",
+        "testv3.pb.go",
+    ],
+    importpath = "google.golang.org/grpc/reflection/grpc_testing_not_regenerate",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/resolver/BUILD.bazel grpc-go/resolver/BUILD.bazel
--- grpc-go-old/resolver/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/resolver/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "resolver",
+    srcs = [
+        "map.go",
+        "resolver.go",
+    ],
+    importpath = "google.golang.org/grpc/resolver",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//attributes",
+        "//credentials",
+        "//internal/pretty",
+        "//serviceconfig",
+    ],
+)
+
+go_test(
+    name = "resolver_test",
+    srcs = [
+        "map_test.go",
+        "resolver_test.go",
+    ],
+    embed = [":resolver"],
+    deps = [
+        "//attributes",
+        "//internal/grpctest",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/resolver/dns/BUILD.bazel grpc-go/resolver/dns/BUILD.bazel
--- grpc-go-old/resolver/dns/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/resolver/dns/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dns",
+    srcs = ["dns_resolver.go"],
+    importpath = "google.golang.org/grpc/resolver/dns",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//internal/resolver/dns",
+        "//resolver",
+    ],
+)
diff -Naru grpc-go-old/resolver/manual/BUILD.bazel grpc-go/resolver/manual/BUILD.bazel
--- grpc-go-old/resolver/manual/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/resolver/manual/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "manual",
+    srcs = ["manual.go"],
+    importpath = "google.golang.org/grpc/resolver/manual",
+    visibility = ["//visibility:public"],
+    deps = ["//resolver"],
+)
diff -Naru grpc-go-old/resolver/passthrough/BUILD.bazel grpc-go/resolver/passthrough/BUILD.bazel
--- grpc-go-old/resolver/passthrough/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/resolver/passthrough/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "passthrough",
+    srcs = ["passthrough.go"],
+    importpath = "google.golang.org/grpc/resolver/passthrough",
+    visibility = ["//visibility:public"],
+    deps = ["//internal/resolver/passthrough"],
+)
diff -Naru grpc-go-old/security/advancedtls/BUILD.bazel grpc-go/security/advancedtls/BUILD.bazel
--- grpc-go-old/security/advancedtls/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/security/advancedtls/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,41 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "advancedtls",
+    srcs = [
+        "advancedtls.go",
+        "crl.go",
+        "sni.go",
+    ],
+    importpath = "google.golang.org/grpc/security/advancedtls",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//credentials",
+        "//credentials/tls/certprovider",
+        "//grpclog",
+        "//internal/credentials",
+        "@org_golang_x_crypto//cryptobyte:go_default_library",
+        "@org_golang_x_crypto//cryptobyte/asn1:go_default_library",
+    ],
+)
+
+go_test(
+    name = "advancedtls_test",
+    srcs = [
+        "advancedtls_integration_test.go",
+        "advancedtls_test.go",
+        "crl_test.go",
+    ],
+    embed = [":advancedtls"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//credentials/tls/certprovider",
+        "//credentials/tls/certprovider/pemfile",
+        "//examples/helloworld/helloworld",
+        "//internal/grpctest",
+        "//security/advancedtls/internal/testutils",
+        "//security/advancedtls/testdata",
+        "@com_github_hashicorp_golang_lru//:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/security/advancedtls/examples/credential_reloading_from_files/client/BUILD.bazel grpc-go/security/advancedtls/examples/credential_reloading_from_files/client/BUILD.bazel
--- grpc-go-old/security/advancedtls/examples/credential_reloading_from_files/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/security/advancedtls/examples/credential_reloading_from_files/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/security/advancedtls/examples/credential_reloading_from_files/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/tls/certprovider/pemfile",
+        "//examples/helloworld/helloworld",
+        "//security/advancedtls",
+        "//security/advancedtls/testdata",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/security/advancedtls/examples/credential_reloading_from_files/server/BUILD.bazel grpc-go/security/advancedtls/examples/credential_reloading_from_files/server/BUILD.bazel
--- grpc-go-old/security/advancedtls/examples/credential_reloading_from_files/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/security/advancedtls/examples/credential_reloading_from_files/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "server_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/security/advancedtls/examples/credential_reloading_from_files/server",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/tls/certprovider/pemfile",
+        "//examples/helloworld/helloworld",
+        "//keepalive",
+        "//security/advancedtls",
+        "//security/advancedtls/testdata",
+    ],
+)
+
+go_binary(
+    name = "server",
+    embed = [":server_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/security/advancedtls/internal/testutils/BUILD.bazel grpc-go/security/advancedtls/internal/testutils/BUILD.bazel
--- grpc-go-old/security/advancedtls/internal/testutils/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/security/advancedtls/internal/testutils/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "testutils",
+    srcs = ["testutils.go"],
+    importpath = "google.golang.org/grpc/security/advancedtls/internal/testutils",
+    visibility = ["//security/advancedtls:__subpackages__"],
+    deps = ["//security/advancedtls/testdata"],
+)
diff -Naru grpc-go-old/security/advancedtls/testdata/BUILD.bazel grpc-go/security/advancedtls/testdata/BUILD.bazel
--- grpc-go-old/security/advancedtls/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/security/advancedtls/testdata/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "testdata",
+    srcs = ["testdata.go"],
+    importpath = "google.golang.org/grpc/security/advancedtls/testdata",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/security/authorization/engine/BUILD.bazel grpc-go/security/authorization/engine/BUILD.bazel
--- grpc-go-old/security/authorization/engine/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/security/authorization/engine/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,46 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "engine",
+    srcs = [
+        "engine.go",
+        "util.go",
+    ],
+    importpath = "google.golang.org/grpc/security/authorization/engine",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//grpclog",
+        "//metadata",
+        "//peer",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/rbac/v2:go_default_library",
+        "@com_github_google_cel_go//cel:go_default_library",
+        "@com_github_google_cel_go//checker/decls:go_default_library",
+        "@com_github_google_cel_go//common/types:go_default_library",
+        "@com_github_google_cel_go//interpreter:go_default_library",
+        "@go_googleapis//google/api/expr/v1alpha1:expr_go_proto",
+        "@org_golang_google_protobuf//proto:go_default_library",
+    ],
+)
+
+go_test(
+    name = "engine_test",
+    srcs = [
+        "engine_test.go",
+        "util_test.go",
+    ],
+    embed = [":engine"],
+    deps = [
+        "//codes",
+        "//internal/grpctest",
+        "//peer",
+        "//status",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/rbac/v2:go_default_library",
+        "@com_github_google_cel_go//cel:go_default_library",
+        "@com_github_google_cel_go//checker/decls:go_default_library",
+        "@com_github_google_cel_go//common/types:go_default_library",
+        "@com_github_google_cel_go//common/types/ref:go_default_library",
+        "@com_github_google_cel_go//interpreter:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@go_googleapis//google/api/expr/v1alpha1:expr_go_proto",
+    ],
+)
diff -Naru grpc-go-old/serviceconfig/BUILD.bazel grpc-go/serviceconfig/BUILD.bazel
--- grpc-go-old/serviceconfig/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/serviceconfig/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "serviceconfig",
+    srcs = ["serviceconfig.go"],
+    importpath = "google.golang.org/grpc/serviceconfig",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/stats/BUILD.bazel grpc-go/stats/BUILD.bazel
--- grpc-go-old/stats/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/stats/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "stats",
+    srcs = [
+        "handlers.go",
+        "stats.go",
+    ],
+    importpath = "google.golang.org/grpc/stats",
+    visibility = ["//visibility:public"],
+    deps = ["//metadata"],
+)
+
+go_test(
+    name = "stats_test",
+    srcs = ["stats_test.go"],
+    deps = [
+        ":stats",
+        "//:grpc",
+        "//credentials/insecure",
+        "//internal/grpctest",
+        "//interop/grpc_testing",
+        "//metadata",
+        "//status",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/status/BUILD.bazel grpc-go/status/BUILD.bazel
--- grpc-go-old/status/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/status/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "status",
+    srcs = ["status.go"],
+    importpath = "google.golang.org/grpc/status",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//codes",
+        "//internal/status",
+        "@go_googleapis//google/rpc:status_go_proto",
+    ],
+)
+
+go_test(
+    name = "status_test",
+    srcs = [
+        "status_ext_test.go",
+        "status_test.go",
+    ],
+    embed = [":status"],
+    deps = [
+        "//codes",
+        "//internal/grpctest",
+        "//internal/status",
+        "//test/grpc_testing",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@go_googleapis//google/rpc:code_go_proto",
+        "@go_googleapis//google/rpc:errdetails_go_proto",
+        "@go_googleapis//google/rpc:status_go_proto",
+        "@io_bazel_rules_go//proto/wkt:any_go_proto",
+        "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+    ],
+)
diff -Naru grpc-go-old/stress/client/BUILD.bazel grpc-go/stress/client/BUILD.bazel
--- grpc-go-old/stress/client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/stress/client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/stress/client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials",
+        "//credentials/insecure",
+        "//grpclog",
+        "//interop",
+        "//interop/grpc_testing",
+        "//status",
+        "//stress/grpc_testing",
+        "//testdata",
+    ],
+)
+
+go_binary(
+    name = "client",
+    embed = [":client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/stress/grpc_testing/BUILD.bazel grpc-go/stress/grpc_testing/BUILD.bazel
--- grpc-go-old/stress/grpc_testing/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/stress/grpc_testing/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,24 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "grpc_testing_proto",
+    srcs = ["metrics.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "grpc_testing_go_proto",
+    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
+    importpath = "google.golang.org/grpc/stress/grpc_testing",
+    proto = ":grpc_testing_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "grpc_testing",
+    embed = [":grpc_testing_go_proto"],
+    importpath = "google.golang.org/grpc/stress/grpc_testing",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/stress/metrics_client/BUILD.bazel grpc-go/stress/metrics_client/BUILD.bazel
--- grpc-go-old/stress/metrics_client/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/stress/metrics_client/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "metrics_client_lib",
+    srcs = ["main.go"],
+    importpath = "google.golang.org/grpc/stress/metrics_client",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//grpclog",
+        "//stress/grpc_testing",
+    ],
+)
+
+go_binary(
+    name = "metrics_client",
+    embed = [":metrics_client_lib"],
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/tap/BUILD.bazel grpc-go/tap/BUILD.bazel
--- grpc-go-old/tap/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/tap/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tap",
+    srcs = ["tap.go"],
+    importpath = "google.golang.org/grpc/tap",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/test/BUILD.bazel grpc-go/test/BUILD.bazel
--- grpc-go-old/test/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/test/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,107 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "test",
+    srcs = [
+        "clienttester.go",
+        "logging.go",
+        "parse_config.go",
+        "race.go",
+        "rawConnWrapper.go",
+        "servertester.go",
+        "timeouts.go",
+    ],
+    importpath = "google.golang.org/grpc/test",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//grpclog",
+        "//resolver/manual",
+        "//serviceconfig",
+        "@org_golang_x_net//http2:go_default_library",
+        "@org_golang_x_net//http2/hpack:go_default_library",
+    ],
+)
+
+go_test(
+    name = "test_test",
+    srcs = [
+        "authority_test.go",
+        "balancer_switching_test.go",
+        "balancer_test.go",
+        "channelz_linux_test.go",
+        "channelz_test.go",
+        "clientconn_state_transition_test.go",
+        "clientconn_test.go",
+        "config_selector_test.go",
+        "context_canceled_test.go",
+        "creds_test.go",
+        "end2end_test.go",
+        "goaway_test.go",
+        "gracefulstop_test.go",
+        "healthcheck_test.go",
+        "insecure_creds_test.go",
+        "interceptor_test.go",
+        "invoke_test.go",
+        "local_creds_test.go",
+        "metadata_test.go",
+        "pickfirst_test.go",
+        "resolver_update_test.go",
+        "retry_test.go",
+        "roundrobin_test.go",
+        "server_test.go",
+        "stream_cleanup_test.go",
+    ],
+    embed = [":test"],
+    deps = [
+        "//:grpc",
+        "//attributes",
+        "//backoff",
+        "//balancer",
+        "//balancer/grpclb",
+        "//balancer/roundrobin",
+        "//codes",
+        "//connectivity",
+        "//credentials",
+        "//credentials/insecure",
+        "//credentials/local",
+        "//encoding",
+        "//encoding/gzip",
+        "//health",
+        "//health/grpc_health_v1",
+        "//internal",
+        "//internal/balancer/stub",
+        "//internal/balancerload",
+        "//internal/binarylog",
+        "//internal/channelz",
+        "//internal/grpcsync",
+        "//internal/grpctest",
+        "//internal/grpcutil",
+        "//internal/metadata",
+        "//internal/resolver",
+        "//internal/serviceconfig",
+        "//internal/stubserver",
+        "//internal/testutils",
+        "//internal/testutils/fakegrpclb",
+        "//internal/testutils/roundrobin",
+        "//internal/transport",
+        "//keepalive",
+        "//metadata",
+        "//peer",
+        "//resolver",
+        "//resolver/manual",
+        "//serviceconfig",
+        "//stats",
+        "//status",
+        "//tap",
+        "//test/bufconn",
+        "//test/grpc_testing",
+        "//testdata",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@go_googleapis//google/rpc:status_go_proto",
+        "@io_bazel_rules_go//proto/wkt:any_go_proto",
+        "@org_golang_x_net//http2:go_default_library",
+        "@org_golang_x_net//http2/hpack:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/test/bufconn/BUILD.bazel grpc-go/test/bufconn/BUILD.bazel
--- grpc-go-old/test/bufconn/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/test/bufconn/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "bufconn",
+    srcs = ["bufconn.go"],
+    importpath = "google.golang.org/grpc/test/bufconn",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "bufconn_test",
+    srcs = ["bufconn_test.go"],
+    embed = [":bufconn"],
+    deps = ["//internal/grpctest"],
+)
diff -Naru grpc-go-old/test/codec_perf/BUILD.bazel grpc-go/test/codec_perf/BUILD.bazel
--- grpc-go-old/test/codec_perf/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/test/codec_perf/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "codec_perf_proto",
+    srcs = ["perf.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "codec_perf_go_proto",
+    importpath = "google.golang.org/grpc/test/codec_perf",
+    proto = ":codec_perf_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "codec_perf",
+    embed = [":codec_perf_go_proto"],
+    importpath = "google.golang.org/grpc/test/codec_perf",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/test/grpc_testing/BUILD.bazel grpc-go/test/grpc_testing/BUILD.bazel
--- grpc-go-old/test/grpc_testing/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/test/grpc_testing/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,24 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "grpc_testing_proto",
+    srcs = ["test.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "grpc_testing_go_proto",
+    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
+    importpath = "google.golang.org/grpc/test/grpc_testing",
+    proto = ":grpc_testing_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "grpc_testing",
+    embed = [":grpc_testing_go_proto"],
+    importpath = "google.golang.org/grpc/test/grpc_testing",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/test/tools/BUILD.bazel grpc-go/test/tools/BUILD.bazel
--- grpc-go-old/test/tools/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/test/tools/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tools",
+    srcs = ["tools_vet.go"],
+    importpath = "google.golang.org/grpc/test/tools",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/test/xds/BUILD.bazel grpc-go/test/xds/BUILD.bazel
--- grpc-go-old/test/xds/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/test/xds/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,58 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "xds_test",
+    srcs = [
+        "xds_client_ack_nack_test.go",
+        "xds_client_affinity_test.go",
+        "xds_client_federation_test.go",
+        "xds_client_integration_test.go",
+        "xds_client_outlier_detection_test.go",
+        "xds_client_retry_test.go",
+        "xds_rls_clusterspecifier_plugin_test.go",
+        "xds_security_config_nack_test.go",
+        "xds_server_integration_test.go",
+        "xds_server_rbac_test.go",
+        "xds_server_serving_mode_test.go",
+    ],
+    deps = [
+        "//:grpc",
+        "//balancer/rls",
+        "//codes",
+        "//connectivity",
+        "//credentials/insecure",
+        "//credentials/xds",
+        "//internal",
+        "//internal/envconfig",
+        "//internal/grpcsync",
+        "//internal/grpctest",
+        "//internal/proto/grpc_lookup_v1",
+        "//internal/stubserver",
+        "//internal/testutils",
+        "//internal/testutils/rls",
+        "//internal/testutils/xds/e2e",
+        "//internal/xds",
+        "//resolver",
+        "//status",
+        "//test/grpc_testing",
+        "//xds",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/cluster/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/endpoint/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/rbac/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/rbac/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/router/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/transport_sockets/tls/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/discovery/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/matcher/v3:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_uuid//:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+        "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/testdata/BUILD.bazel grpc-go/testdata/BUILD.bazel
--- grpc-go-old/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/testdata/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "testdata",
+    srcs = ["testdata.go"],
+    importpath = "google.golang.org/grpc/testdata",
+    visibility = ["//visibility:public"],
+)
diff -Naru grpc-go-old/xds/BUILD.bazel grpc-go/xds/BUILD.bazel
--- grpc-go-old/xds/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,73 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "xds",
+    srcs = [
+        "server.go",
+        "server_options.go",
+        "xds.go",
+    ],
+    importpath = "google.golang.org/grpc/xds",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//connectivity",
+        "//credentials",
+        "//credentials/tls/certprovider/pemfile",
+        "//grpclog",
+        "//internal",
+        "//internal/admin",
+        "//internal/buffer",
+        "//internal/envconfig",
+        "//internal/grpclog",
+        "//internal/grpcsync",
+        "//internal/resolver",
+        "//internal/transport",
+        "//metadata",
+        "//resolver",
+        "//status",
+        "//xds/csds",
+        "//xds/internal/balancer",
+        "//xds/internal/clusterspecifier/rls",
+        "//xds/internal/httpfilter/fault",
+        "//xds/internal/httpfilter/rbac",
+        "//xds/internal/httpfilter/router",
+        "//xds/internal/resolver",
+        "//xds/internal/server",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/controller/version/v2:version",
+        "//xds/internal/xdsclient/controller/version/v3:version",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/status/v3:go_default_library",
+    ],
+)
+
+go_test(
+    name = "xds_test",
+    srcs = ["server_test.go"],
+    embed = [":xds"],
+    deps = [
+        "//:grpc",
+        "//connectivity",
+        "//credentials/insecure",
+        "//credentials/tls/certprovider",
+        "//credentials/xds",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//internal/testutils/xds/e2e",
+        "//xds/internal/httpfilter/router",
+        "//xds/internal/testutils",
+        "//xds/internal/testutils/fakeclient",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/transport_sockets/tls/v3:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
+    ],
+)
diff -Naru grpc-go-old/xds/bootstrap/BUILD.bazel grpc-go/xds/bootstrap/BUILD.bazel
--- grpc-go-old/xds/bootstrap/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/bootstrap/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "bootstrap",
+    srcs = ["bootstrap.go"],
+    importpath = "google.golang.org/grpc/xds/bootstrap",
+    visibility = ["//visibility:public"],
+    deps = ["//credentials"],
+)
+
+go_test(
+    name = "bootstrap_test",
+    srcs = ["bootstrap_test.go"],
+    embed = [":bootstrap"],
+    deps = ["//credentials"],
+)
diff -Naru grpc-go-old/xds/csds/BUILD.bazel grpc-go/xds/csds/BUILD.bazel
--- grpc-go-old/xds/csds/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/csds/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,53 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "csds",
+    srcs = ["csds.go"],
+    importpath = "google.golang.org/grpc/xds/csds",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//codes",
+        "//grpclog",
+        "//status",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/controller/version/v2:version",
+        "//xds/internal/xdsclient/controller/version/v3:version",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_envoyproxy_go_control_plane//envoy/admin/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/status/v3:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//types/known/timestamppb:go_default_library",
+    ],
+)
+
+go_test(
+    name = "csds_test",
+    srcs = ["csds_test.go"],
+    embed = [":csds"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//internal/testutils/xds/e2e",
+        "//internal/xds",
+        "//xds/internal/httpfilter/router",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_envoyproxy_go_control_plane//envoy/admin/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/cluster/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/endpoint/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/status/v3:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_uuid//:go_default_library",
+        "@org_golang_google_protobuf//testing/protocmp:go_default_library",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/googledirectpath/BUILD.bazel grpc-go/xds/googledirectpath/BUILD.bazel
--- grpc-go-old/xds/googledirectpath/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/googledirectpath/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,46 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "googledirectpath",
+    srcs = [
+        "googlec2p.go",
+        "utils.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/googledirectpath",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//:grpc",
+        "//credentials/google",
+        "//grpclog",
+        "//internal/envconfig",
+        "//internal/googlecloud",
+        "//internal/grpclog",
+        "//internal/grpcrand",
+        "//resolver",
+        "//xds",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@org_golang_google_protobuf//types/known/structpb:go_default_library",
+    ],
+)
+
+go_test(
+    name = "googledirectpath_test",
+    srcs = ["googlec2p_test.go"],
+    embed = [":googledirectpath"],
+    deps = [
+        "//:grpc",
+        "//internal/envconfig",
+        "//resolver",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@org_golang_google_protobuf//testing/protocmp:go_default_library",
+        "@org_golang_google_protobuf//types/known/structpb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/BUILD.bazel grpc-go/xds/internal/BUILD.bazel
--- grpc-go-old/xds/internal/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "internal",
+    srcs = ["internal.go"],
+    importpath = "google.golang.org/grpc/xds/internal",
+    visibility = ["//xds:__subpackages__"],
+    deps = ["//resolver"],
+)
+
+go_test(
+    name = "internal_test",
+    srcs = ["internal_test.go"],
+    embed = [":internal"],
+    deps = [
+        "//internal/grpctest",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/BUILD.bazel grpc-go/xds/internal/balancer/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "balancer",
+    srcs = ["balancer.go"],
+    importpath = "google.golang.org/grpc/xds/internal/balancer",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//balancer/weightedtarget",
+        "//xds/internal/balancer/cdsbalancer",
+        "//xds/internal/balancer/clusterimpl",
+        "//xds/internal/balancer/clustermanager",
+        "//xds/internal/balancer/clusterresolver",
+        "//xds/internal/balancer/outlierdetection",
+        "//xds/internal/balancer/priority",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/cdsbalancer/BUILD.bazel grpc-go/xds/internal/balancer/cdsbalancer/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/cdsbalancer/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/cdsbalancer/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,69 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "cdsbalancer",
+    srcs = [
+        "cdsbalancer.go",
+        "cluster_handler.go",
+        "logging.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/balancer/cdsbalancer",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//balancer/base",
+        "//connectivity",
+        "//credentials",
+        "//credentials/tls/certprovider",
+        "//grpclog",
+        "//internal/buffer",
+        "//internal/credentials/xds",
+        "//internal/envconfig",
+        "//internal/grpclog",
+        "//internal/grpcsync",
+        "//internal/pretty",
+        "//internal/serviceconfig",
+        "//resolver",
+        "//serviceconfig",
+        "//xds/internal/balancer/clusterresolver",
+        "//xds/internal/balancer/outlierdetection",
+        "//xds/internal/balancer/ringhash",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/xdsresource",
+    ],
+)
+
+go_test(
+    name = "cdsbalancer_test",
+    srcs = [
+        "cdsbalancer_security_test.go",
+        "cdsbalancer_test.go",
+        "cluster_handler_test.go",
+    ],
+    embed = [":cdsbalancer"],
+    deps = [
+        "//attributes",
+        "//balancer",
+        "//connectivity",
+        "//credentials/local",
+        "//credentials/tls/certprovider",
+        "//credentials/xds",
+        "//internal",
+        "//internal/credentials/xds",
+        "//internal/grpctest",
+        "//internal/serviceconfig",
+        "//internal/testutils",
+        "//internal/xds/matcher",
+        "//resolver",
+        "//serviceconfig",
+        "//xds/internal/balancer/clusterresolver",
+        "//xds/internal/balancer/outlierdetection",
+        "//xds/internal/balancer/ringhash",
+        "//xds/internal/testutils/fakeclient",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/clusterimpl/BUILD.bazel grpc-go/xds/internal/balancer/clusterimpl/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/clusterimpl/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/clusterimpl/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,64 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "clusterimpl",
+    srcs = [
+        "clusterimpl.go",
+        "config.go",
+        "logging.go",
+        "picker.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/balancer/clusterimpl",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//codes",
+        "//connectivity",
+        "//grpclog",
+        "//internal",
+        "//internal/buffer",
+        "//internal/grpclog",
+        "//internal/grpcsync",
+        "//internal/pretty",
+        "//internal/serviceconfig",
+        "//internal/wrr",
+        "//resolver",
+        "//serviceconfig",
+        "//status",
+        "//xds/internal",
+        "//xds/internal/balancer/loadstore",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/load",
+        "@com_github_cncf_xds_go//xds/data/orca/v3:go_default_library",
+    ],
+)
+
+go_test(
+    name = "clusterimpl_test",
+    srcs = [
+        "balancer_test.go",
+        "config_test.go",
+    ],
+    embed = [":clusterimpl"],
+    deps = [
+        "//balancer",
+        "//balancer/base",
+        "//balancer/roundrobin",
+        "//balancer/weightedtarget",
+        "//connectivity",
+        "//internal",
+        "//internal/balancer/stub",
+        "//internal/grpctest",
+        "//internal/serviceconfig",
+        "//internal/testutils",
+        "//resolver",
+        "//xds/internal",
+        "//xds/internal/testutils/fakeclient",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/load",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/clustermanager/BUILD.bazel grpc-go/xds/internal/balancer/clustermanager/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/clustermanager/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/clustermanager/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,57 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "clustermanager",
+    srcs = [
+        "balancerstateaggregator.go",
+        "clustermanager.go",
+        "config.go",
+        "picker.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/balancer/clustermanager",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//balancer/base",
+        "//codes",
+        "//connectivity",
+        "//grpclog",
+        "//internal/balancergroup",
+        "//internal/grpclog",
+        "//internal/hierarchy",
+        "//internal/pretty",
+        "//internal/serviceconfig",
+        "//resolver",
+        "//serviceconfig",
+        "//status",
+    ],
+)
+
+go_test(
+    name = "clustermanager_test",
+    srcs = [
+        "clustermanager_test.go",
+        "config_test.go",
+    ],
+    embed = [":clustermanager"],
+    deps = [
+        "//:grpc",
+        "//balancer",
+        "//balancer/roundrobin",
+        "//balancer/weightedtarget",
+        "//codes",
+        "//connectivity",
+        "//credentials/insecure",
+        "//internal/balancer/stub",
+        "//internal/balancergroup",
+        "//internal/channelz",
+        "//internal/grpctest",
+        "//internal/hierarchy",
+        "//internal/serviceconfig",
+        "//internal/testutils",
+        "//resolver",
+        "//status",
+        "//xds/internal/balancer/cdsbalancer",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/clusterresolver/BUILD.bazel grpc-go/xds/internal/balancer/clusterresolver/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/clusterresolver/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/clusterresolver/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,89 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "clusterresolver",
+    srcs = [
+        "clusterresolver.go",
+        "config.go",
+        "configbuilder.go",
+        "configbuilder_childname.go",
+        "logging.go",
+        "resource_resolver.go",
+        "resource_resolver_dns.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/balancer/clusterresolver",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//attributes",
+        "//balancer",
+        "//balancer/base",
+        "//balancer/roundrobin",
+        "//balancer/weightedroundrobin",
+        "//balancer/weightedtarget",
+        "//connectivity",
+        "//grpclog",
+        "//internal/buffer",
+        "//internal/envconfig",
+        "//internal/grpclog",
+        "//internal/grpcsync",
+        "//internal/hierarchy",
+        "//internal/pretty",
+        "//internal/serviceconfig",
+        "//resolver",
+        "//serviceconfig",
+        "//xds/internal",
+        "//xds/internal/balancer/clusterimpl",
+        "//xds/internal/balancer/outlierdetection",
+        "//xds/internal/balancer/priority",
+        "//xds/internal/balancer/ringhash",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/xdsresource",
+    ],
+)
+
+go_test(
+    name = "clusterresolver_test",
+    srcs = [
+        "clusterresolver_test.go",
+        "config_test.go",
+        "configbuilder_childname_test.go",
+        "configbuilder_test.go",
+        "priority_test.go",
+        "resource_resolver_test.go",
+        "testutil_test.go",
+    ],
+    embed = [":clusterresolver"],
+    deps = [
+        "//attributes",
+        "//balancer",
+        "//balancer/roundrobin",
+        "//balancer/weightedroundrobin",
+        "//balancer/weightedtarget",
+        "//connectivity",
+        "//internal/balancergroup",
+        "//internal/grpctest",
+        "//internal/hierarchy",
+        "//internal/serviceconfig",
+        "//internal/testutils",
+        "//resolver",
+        "//resolver/manual",
+        "//xds/internal",
+        "//xds/internal/balancer/clusterimpl",
+        "//xds/internal/balancer/outlierdetection",
+        "//xds/internal/balancer/priority",
+        "//xds/internal/balancer/ringhash",
+        "//xds/internal/testutils",
+        "//xds/internal/testutils/fakeclient",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/controller/version/v2:version",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/endpoint:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/clusterresolver/e2e_test/BUILD.bazel grpc-go/xds/internal/balancer/clusterresolver/e2e_test/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/clusterresolver/e2e_test/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/clusterresolver/e2e_test/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "e2e_test_test",
+    srcs = ["eds_impl_test.go"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials/insecure",
+        "//internal",
+        "//internal/balancergroup",
+        "//internal/grpctest",
+        "//internal/stubserver",
+        "//internal/testutils/roundrobin",
+        "//internal/testutils/xds/e2e",
+        "//resolver",
+        "//resolver/manual",
+        "//serviceconfig",
+        "//status",
+        "//test/grpc_testing",
+        "//xds/internal/balancer/clusterresolver",
+        "//xds/internal/balancer/priority",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/controller/version/v3:version",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/endpoint/v3:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/loadstore/BUILD.bazel grpc-go/xds/internal/balancer/loadstore/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/loadstore/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/loadstore/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "loadstore",
+    srcs = ["load_store_wrapper.go"],
+    importpath = "google.golang.org/grpc/xds/internal/balancer/loadstore",
+    visibility = ["//xds:__subpackages__"],
+    deps = ["//xds/internal/xdsclient/load"],
+)
diff -Naru grpc-go-old/xds/internal/balancer/outlierdetection/BUILD.bazel grpc-go/xds/internal/balancer/outlierdetection/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/outlierdetection/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/outlierdetection/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,52 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "outlierdetection",
+    srcs = [
+        "balancer.go",
+        "callcounter.go",
+        "config.go",
+        "logging.go",
+        "subconn_wrapper.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/balancer/outlierdetection",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//connectivity",
+        "//grpclog",
+        "//internal/balancer/gracefulswitch",
+        "//internal/buffer",
+        "//internal/envconfig",
+        "//internal/grpclog",
+        "//internal/grpcrand",
+        "//internal/grpcsync",
+        "//internal/serviceconfig",
+        "//resolver",
+        "//serviceconfig",
+    ],
+)
+
+go_test(
+    name = "outlierdetection_test",
+    srcs = [
+        "balancer_test.go",
+        "callcounter_test.go",
+        "config_test.go",
+    ],
+    embed = [":outlierdetection"],
+    deps = [
+        "//balancer",
+        "//connectivity",
+        "//internal/balancer/stub",
+        "//internal/grpcsync",
+        "//internal/grpctest",
+        "//internal/serviceconfig",
+        "//internal/testutils",
+        "//resolver",
+        "//serviceconfig",
+        "//xds/internal/balancer/clusterimpl",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/outlierdetection/e2e_test/BUILD.bazel grpc-go/xds/internal/balancer/outlierdetection/e2e_test/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/outlierdetection/e2e_test/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/outlierdetection/e2e_test/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "e2e_test_test",
+    srcs = ["outlierdetection_test.go"],
+    deps = [
+        "//:grpc",
+        "//credentials/insecure",
+        "//internal",
+        "//internal/grpctest",
+        "//internal/stubserver",
+        "//peer",
+        "//resolver",
+        "//resolver/manual",
+        "//serviceconfig",
+        "//test/grpc_testing",
+        "//xds/internal/balancer/outlierdetection",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/priority/BUILD.bazel grpc-go/xds/internal/balancer/priority/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/priority/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/priority/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,55 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "priority",
+    srcs = [
+        "balancer.go",
+        "balancer_child.go",
+        "balancer_priority.go",
+        "config.go",
+        "ignore_resolve_now.go",
+        "logging.go",
+        "utils.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/balancer/priority",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//balancer/base",
+        "//connectivity",
+        "//grpclog",
+        "//internal/balancergroup",
+        "//internal/buffer",
+        "//internal/grpclog",
+        "//internal/grpcsync",
+        "//internal/hierarchy",
+        "//internal/pretty",
+        "//internal/serviceconfig",
+        "//resolver",
+        "//serviceconfig",
+    ],
+)
+
+go_test(
+    name = "priority_test",
+    srcs = [
+        "balancer_test.go",
+        "config_test.go",
+        "ignore_resolve_now_test.go",
+        "utils_test.go",
+    ],
+    embed = [":priority"],
+    deps = [
+        "//balancer",
+        "//balancer/roundrobin",
+        "//connectivity",
+        "//internal/balancer/stub",
+        "//internal/balancergroup",
+        "//internal/grpctest",
+        "//internal/hierarchy",
+        "//internal/serviceconfig",
+        "//internal/testutils",
+        "//resolver",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/ringhash/BUILD.bazel grpc-go/xds/internal/balancer/ringhash/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/ringhash/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/ringhash/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,53 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "ringhash",
+    srcs = [
+        "config.go",
+        "logging.go",
+        "picker.go",
+        "ring.go",
+        "ringhash.go",
+        "util.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/balancer/ringhash",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//balancer/base",
+        "//balancer/weightedroundrobin",
+        "//codes",
+        "//connectivity",
+        "//grpclog",
+        "//internal/grpclog",
+        "//internal/pretty",
+        "//resolver",
+        "//serviceconfig",
+        "//status",
+        "@com_github_cespare_xxhash_v2//:go_default_library",
+    ],
+)
+
+go_test(
+    name = "ringhash_test",
+    srcs = [
+        "config_test.go",
+        "picker_test.go",
+        "ring_test.go",
+        "ringhash_test.go",
+    ],
+    embed = [":ringhash"],
+    deps = [
+        "//attributes",
+        "//balancer",
+        "//balancer/weightedroundrobin",
+        "//connectivity",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//resolver",
+        "//xds/internal",
+        "@com_github_cespare_xxhash_v2//:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/balancer/ringhash/e2e/BUILD.bazel grpc-go/xds/internal/balancer/ringhash/e2e/BUILD.bazel
--- grpc-go-old/xds/internal/balancer/ringhash/e2e/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/balancer/ringhash/e2e/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "e2e_test",
+    srcs = ["ringhash_balancer_test.go"],
+    deps = [
+        "//:grpc",
+        "//connectivity",
+        "//credentials/insecure",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//resolver",
+        "//resolver/manual",
+        "//test/grpc_testing",
+        "//xds/internal/balancer/ringhash",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/clusterspecifier/BUILD.bazel grpc-go/xds/internal/clusterspecifier/BUILD.bazel
--- grpc-go-old/xds/internal/clusterspecifier/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/clusterspecifier/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "clusterspecifier",
+    srcs = ["cluster_specifier.go"],
+    importpath = "google.golang.org/grpc/xds/internal/clusterspecifier",
+    visibility = ["//xds:__subpackages__"],
+    deps = ["@com_github_golang_protobuf//proto:go_default_library"],
+)
diff -Naru grpc-go-old/xds/internal/clusterspecifier/rls/BUILD.bazel grpc-go/xds/internal/clusterspecifier/rls/BUILD.bazel
--- grpc-go-old/xds/internal/clusterspecifier/rls/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/clusterspecifier/rls/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "rls",
+    srcs = ["rls.go"],
+    importpath = "google.golang.org/grpc/xds/internal/clusterspecifier/rls",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//balancer",
+        "//internal",
+        "//internal/envconfig",
+        "//internal/proto/grpc_lookup_v1",
+        "//xds/internal/clusterspecifier",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@org_golang_google_protobuf//encoding/protojson:go_default_library",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+    ],
+)
+
+go_test(
+    name = "rls_test",
+    srcs = ["rls_test.go"],
+    embed = [":rls"],
+    deps = [
+        "//balancer/rls",
+        "//internal/grpctest",
+        "//internal/proto/grpc_lookup_v1",
+        "//internal/testutils",
+        "//xds/internal/balancer/cdsbalancer",
+        "//xds/internal/clusterspecifier",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/httpfilter/BUILD.bazel grpc-go/xds/internal/httpfilter/BUILD.bazel
--- grpc-go-old/xds/internal/httpfilter/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/httpfilter/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "httpfilter",
+    srcs = ["httpfilter.go"],
+    importpath = "google.golang.org/grpc/xds/internal/httpfilter",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//internal/resolver",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/httpfilter/fault/BUILD.bazel grpc-go/xds/internal/httpfilter/fault/BUILD.bazel
--- grpc-go-old/xds/internal/httpfilter/fault/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/httpfilter/fault/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,319 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "fault",
+    srcs = ["fault.go"],
+    importpath = "google.golang.org/grpc/xds/internal/httpfilter/fault",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//codes",
+        "//internal/grpcrand",
+        "//internal/resolver",
+        "//metadata",
+        "//status",
+        "//xds/internal/httpfilter",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+    ],
+)
+
+go_test(
+    name = "fault_test",
+    srcs = ["fault_test.go"],
+    embed = [":fault"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:amd64": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:arm": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:arm64": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:mips": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:mips64": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:mips64le": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:mipsle": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:ppc64": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:ppc64le": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:riscv64": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:s390x": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:wasm": [
+            "//:grpc",
+            "//codes",
+            "//credentials/insecure",
+            "//internal/grpcrand",
+            "//internal/grpctest",
+            "//internal/testutils",
+            "//internal/testutils/xds/e2e",
+            "//internal/xds",
+            "//metadata",
+            "//status",
+            "//test/grpc_testing",
+            "//xds/internal/balancer",
+            "//xds/internal/resolver",
+            "//xds/internal/xdsclient/controller/version/v3:version",
+            "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/common/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/fault/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+            "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+            "@com_github_google_uuid//:go_default_library",
+            "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -Naru grpc-go-old/xds/internal/httpfilter/rbac/BUILD.bazel grpc-go/xds/internal/httpfilter/rbac/BUILD.bazel
--- grpc-go-old/xds/internal/httpfilter/rbac/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/httpfilter/rbac/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "rbac",
+    srcs = ["rbac.go"],
+    importpath = "google.golang.org/grpc/xds/internal/httpfilter/rbac",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//internal",
+        "//internal/envconfig",
+        "//internal/resolver",
+        "//internal/xds/rbac",
+        "//xds/internal/httpfilter",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/rbac/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/rbac/v3:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/httpfilter/router/BUILD.bazel grpc-go/xds/internal/httpfilter/router/BUILD.bazel
--- grpc-go-old/xds/internal/httpfilter/router/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/httpfilter/router/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "router",
+    srcs = ["router.go"],
+    importpath = "google.golang.org/grpc/xds/internal/httpfilter/router",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//internal/resolver",
+        "//xds/internal/httpfilter",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/router/v3:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/resolver/BUILD.bazel grpc-go/xds/internal/resolver/BUILD.bazel
--- grpc-go-old/xds/internal/resolver/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/resolver/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,81 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "resolver",
+    srcs = [
+        "logging.go",
+        "serviceconfig.go",
+        "watch_service.go",
+        "xds_resolver.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/resolver",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//codes",
+        "//credentials",
+        "//grpclog",
+        "//internal",
+        "//internal/envconfig",
+        "//internal/grpclog",
+        "//internal/grpcrand",
+        "//internal/grpcsync",
+        "//internal/pretty",
+        "//internal/resolver",
+        "//internal/serviceconfig",
+        "//internal/wrr",
+        "//metadata",
+        "//resolver",
+        "//status",
+        "//xds/internal/balancer/clustermanager",
+        "//xds/internal/balancer/ringhash",
+        "//xds/internal/clusterspecifier",
+        "//xds/internal/httpfilter",
+        "//xds/internal/httpfilter/router",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_cespare_xxhash_v2//:go_default_library",
+    ],
+)
+
+go_test(
+    name = "resolver_test",
+    srcs = [
+        "cluster_specifier_plugin_test.go",
+        "serviceconfig_test.go",
+        "watch_service_test.go",
+        "xds_resolver_test.go",
+    ],
+    embed = [":resolver"],
+    deps = [
+        "//balancer",
+        "//codes",
+        "//credentials/insecure",
+        "//credentials/xds",
+        "//internal",
+        "//internal/envconfig",
+        "//internal/grpcrand",
+        "//internal/grpctest",
+        "//internal/resolver",
+        "//internal/testutils",
+        "//internal/wrr",
+        "//metadata",
+        "//resolver",
+        "//serviceconfig",
+        "//status",
+        "//xds/internal/balancer/cdsbalancer",
+        "//xds/internal/balancer/clustermanager",
+        "//xds/internal/balancer/ringhash",
+        "//xds/internal/clusterspecifier",
+        "//xds/internal/httpfilter",
+        "//xds/internal/httpfilter/router",
+        "//xds/internal/testutils/fakeclient",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_cespare_xxhash_v2//:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@org_golang_google_protobuf//proto:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/server/BUILD.bazel grpc-go/xds/internal/server/BUILD.bazel
--- grpc-go-old/xds/internal/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/server/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,50 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "server",
+    srcs = [
+        "conn_wrapper.go",
+        "listener_wrapper.go",
+        "rds_handler.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/server",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//backoff",
+        "//connectivity",
+        "//credentials/tls/certprovider",
+        "//grpclog",
+        "//internal/backoff",
+        "//internal/credentials/xds",
+        "//internal/envconfig",
+        "//internal/grpclog",
+        "//internal/grpcsync",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/xdsresource",
+    ],
+)
+
+go_test(
+    name = "server_test",
+    srcs = [
+        "listener_wrapper_test.go",
+        "rds_handler_test.go",
+    ],
+    embed = [":server"],
+    deps = [
+        "//internal/envconfig",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//internal/testutils/xds/e2e",
+        "//xds/internal/httpfilter/router",
+        "//xds/internal/testutils/fakeclient",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/transport_sockets/tls/v3:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/test/e2e/BUILD.bazel grpc-go/xds/internal/test/e2e/BUILD.bazel
--- grpc-go-old/xds/internal/test/e2e/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/test/e2e/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "e2e",
+    srcs = [
+        "controlplane.go",
+        "e2e.go",
+        "e2e_utils.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/test/e2e",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//channelz/grpc_channelz_v1",
+        "//credentials/insecure",
+        "//internal/testutils/xds/e2e",
+        "//internal/xds",
+        "//interop/grpc_testing",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_uuid//:go_default_library",
+    ],
+)
+
+go_test(
+    name = "e2e_test",
+    srcs = ["e2e_test.go"],
+    embed = [":e2e"],
+    deps = [
+        "//channelz/grpc_channelz_v1",
+        "//internal/testutils/xds/e2e",
+        "//interop/grpc_testing",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/cluster/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/testutils/BUILD.bazel grpc-go/xds/internal/testutils/BUILD.bazel
--- grpc-go-old/xds/internal/testutils/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/testutils/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "testutils",
+    srcs = [
+        "protos.go",
+        "testutils.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/testutils",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//xds/internal",
+        "//xds/internal/xdsclient/xdsresource",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/endpoint:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
+    ],
+)
+
+go_test(
+    name = "testutils_test",
+    srcs = ["balancer_test.go"],
+    embed = [":testutils"],
+    deps = [
+        "//balancer",
+        "//internal/testutils",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/testutils/fakeclient/BUILD.bazel grpc-go/xds/internal/testutils/fakeclient/BUILD.bazel
--- grpc-go-old/xds/internal/testutils/fakeclient/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/testutils/fakeclient/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fakeclient",
+    srcs = ["client.go"],
+    importpath = "google.golang.org/grpc/xds/internal/testutils/fakeclient",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//internal/grpcsync",
+        "//internal/testutils",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/load",
+        "//xds/internal/xdsclient/xdsresource",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/testutils/fakeserver/BUILD.bazel grpc-go/xds/internal/testutils/fakeserver/BUILD.bazel
--- grpc-go-old/xds/internal/testutils/fakeserver/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/testutils/fakeserver/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fakeserver",
+    srcs = ["server.go"],
+    importpath = "google.golang.org/grpc/xds/internal/testutils/fakeserver",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//internal/testutils",
+        "//status",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/discovery/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/load_stats/v2:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/BUILD.bazel grpc-go/xds/internal/xdsclient/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,89 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "xdsclient",
+    srcs = [
+        "attributes.go",
+        "authority.go",
+        "client.go",
+        "client_new.go",
+        "clientimpl.go",
+        "clientimpl_authority.go",
+        "clientimpl_dump.go",
+        "clientimpl_loadreport.go",
+        "clientimpl_validator.go",
+        "clientimpl_watchers.go",
+        "logging.go",
+        "requests_counter.go",
+        "singleton.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/xdsclient",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//grpclog",
+        "//internal/cache",
+        "//internal/grpclog",
+        "//internal/grpcsync",
+        "//resolver",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/controller",
+        "//xds/internal/xdsclient/load",
+        "//xds/internal/xdsclient/pubsub",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+    ],
+)
+
+go_test(
+    name = "xdsclient_test",
+    srcs = [
+        "authority_test.go",
+        "client_test.go",
+        "dump_test.go",
+        "loadreport_test.go",
+        "requests_counter_test.go",
+        "singleton_test.go",
+        "watchers_cluster_test.go",
+        "watchers_endpoints_test.go",
+        "watchers_federation_test.go",
+        "watchers_route_test.go",
+        "watchers_test.go",
+        "xdsclient_test.go",
+    ],
+    embed = [":xdsclient"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials/insecure",
+        "//internal/envconfig",
+        "//internal/grpclog",
+        "//internal/grpcsync",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//status",
+        "//xds/internal",
+        "//xds/internal/testutils",
+        "//xds/internal/testutils/fakeserver",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/controller/version/v2:version",
+        "//xds/internal/xdsclient/load",
+        "//xds/internal/xdsclient/pubsub",
+        "//xds/internal/xdsclient/xdsresource",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/endpoint:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/cluster/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/load_stats/v2:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+        "@org_golang_google_protobuf//testing/protocmp:go_default_library",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/bootstrap/BUILD.bazel grpc-go/xds/internal/xdsclient/bootstrap/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/bootstrap/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/bootstrap/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,55 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "bootstrap",
+    srcs = [
+        "bootstrap.go",
+        "logging.go",
+        "template.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/xdsclient/bootstrap",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//credentials",
+        "//credentials/google",
+        "//credentials/insecure",
+        "//credentials/tls/certprovider",
+        "//grpclog",
+        "//internal",
+        "//internal/envconfig",
+        "//internal/grpclog",
+        "//internal/pretty",
+        "//xds/bootstrap",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_golang_protobuf//jsonpb:go_default_library_gen",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
+
+go_test(
+    name = "bootstrap_test",
+    srcs = [
+        "bootstrap_test.go",
+        "template_test.go",
+    ],
+    embed = [":bootstrap"],
+    deps = [
+        "//:grpc",
+        "//credentials/google",
+        "//credentials/insecure",
+        "//credentials/tls/certprovider",
+        "//internal",
+        "//internal/envconfig",
+        "//xds/bootstrap",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:struct_go_proto",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/controller/BUILD.bazel grpc-go/xds/internal/xdsclient/controller/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/controller/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/controller/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,69 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "controller",
+    srcs = [
+        "controller.go",
+        "loadreport.go",
+        "transport.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/xdsclient/controller",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//internal/backoff",
+        "//internal/buffer",
+        "//internal/grpclog",
+        "//keepalive",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/controller/version",
+        "//xds/internal/xdsclient/load",
+        "//xds/internal/xdsclient/pubsub",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_golang_protobuf//proto:go_default_library",
+    ],
+)
+
+go_test(
+    name = "controller_test",
+    srcs = [
+        "controller_test.go",
+        "v2_ack_test.go",
+        "v2_cds_test.go",
+        "v2_client_test.go",
+        "v2_eds_test.go",
+        "v2_lds_test.go",
+        "v2_rds_test.go",
+        "v2_testutils_test.go",
+    ],
+    embed = [":controller"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//credentials/insecure",
+        "//internal/grpclog",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//resolver",
+        "//resolver/manual",
+        "//xds/internal",
+        "//xds/internal/testutils",
+        "//xds/internal/testutils/fakeserver",
+        "//xds/internal/xdsclient/bootstrap",
+        "//xds/internal/xdsclient/controller/version/v2:version",
+        "//xds/internal/xdsclient/pubsub",
+        "//xds/internal/xdsclient/xdsresource",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/route:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/filter/network/http_connection_manager/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v2:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:any_go_proto",
+        "@io_bazel_rules_go//proto/wkt:struct_go_proto",
+        "@org_golang_google_protobuf//testing/protocmp:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/controller/version/BUILD.bazel grpc-go/xds/internal/xdsclient/controller/version/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/controller/version/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/controller/version/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "version",
+    srcs = ["version.go"],
+    importpath = "google.golang.org/grpc/xds/internal/xdsclient/controller/version",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//internal/grpclog",
+        "//xds/internal/xdsclient/load",
+        "//xds/internal/xdsclient/xdsresource",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/controller/version/v2/BUILD.bazel grpc-go/xds/internal/xdsclient/controller/version/v2/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/controller/version/v2/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/controller/version/v2/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "version",
+    srcs = [
+        "client.go",
+        "loadreport.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/xdsclient/controller/version/v2",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//internal/grpclog",
+        "//internal/pretty",
+        "//xds/internal",
+        "//xds/internal/xdsclient/controller/version",
+        "//xds/internal/xdsclient/load",
+        "//xds/internal/xdsclient/xdsresource",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/endpoint:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/discovery/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/load_stats/v2:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@go_googleapis//google/rpc:status_go_proto",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/controller/version/v3/BUILD.bazel grpc-go/xds/internal/xdsclient/controller/version/v3/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/controller/version/v3/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/controller/version/v3/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "version",
+    srcs = [
+        "client.go",
+        "loadreport.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/xdsclient/controller/version/v3",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//:grpc",
+        "//codes",
+        "//internal/grpclog",
+        "//internal/pretty",
+        "//xds/internal",
+        "//xds/internal/xdsclient/controller/version",
+        "//xds/internal/xdsclient/load",
+        "//xds/internal/xdsclient/xdsresource",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/endpoint/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/discovery/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/load_stats/v3:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@go_googleapis//google/rpc:status_go_proto",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/e2e_test/BUILD.bazel grpc-go/xds/internal/xdsclient/e2e_test/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/e2e_test/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/e2e_test/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "e2e_test_test",
+    srcs = ["lds_watchers_test.go"],
+    deps = [
+        "//internal/envconfig",
+        "//internal/grpcsync",
+        "//internal/grpctest",
+        "//internal/testutils",
+        "//internal/testutils/xds/e2e",
+        "//xds",
+        "//xds/internal/httpfilter/router",
+        "//xds/internal/xdsclient",
+        "//xds/internal/xdsclient/controller/version/v3:version",
+        "//xds/internal/xdsclient/xdsresource",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/router/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/discovery/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//pkg/wellknown:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/load/BUILD.bazel grpc-go/xds/internal/xdsclient/load/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/load/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/load/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "load",
+    srcs = [
+        "reporter.go",
+        "store.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/xdsclient/load",
+    visibility = ["//xds:__subpackages__"],
+)
+
+go_test(
+    name = "load_test",
+    srcs = ["store_test.go"],
+    embed = [":load"],
+    deps = [
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/pubsub/BUILD.bazel grpc-go/xds/internal/xdsclient/pubsub/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/pubsub/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/pubsub/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pubsub",
+    srcs = [
+        "dump.go",
+        "interface.go",
+        "pubsub.go",
+        "update.go",
+        "watch.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/xdsclient/pubsub",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//internal/buffer",
+        "//internal/grpclog",
+        "//internal/grpcsync",
+        "//internal/pretty",
+        "//xds/internal/xdsclient/xdsresource",
+        "@io_bazel_rules_go//proto/wkt:any_go_proto",
+        "@org_golang_google_protobuf//proto:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/xdsresource/BUILD.bazel grpc-go/xds/internal/xdsclient/xdsresource/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/xdsresource/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/xdsresource/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,119 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "xdsresource",
+    srcs = [
+        "errors.go",
+        "filter_chain.go",
+        "matcher.go",
+        "matcher_path.go",
+        "name.go",
+        "type.go",
+        "type_cds.go",
+        "type_eds.go",
+        "type_lds.go",
+        "type_rds.go",
+        "unmarshal.go",
+        "unmarshal_cds.go",
+        "unmarshal_eds.go",
+        "unmarshal_lds.go",
+        "unmarshal_rds.go",
+    ],
+    importpath = "google.golang.org/grpc/xds/internal/xdsclient/xdsresource",
+    visibility = ["//xds:__subpackages__"],
+    deps = [
+        "//codes",
+        "//internal/envconfig",
+        "//internal/grpclog",
+        "//internal/grpcrand",
+        "//internal/grpcutil",
+        "//internal/pretty",
+        "//internal/resolver",
+        "//internal/xds/matcher",
+        "//metadata",
+        "//xds/internal",
+        "//xds/internal/clusterspecifier",
+        "//xds/internal/httpfilter",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_cncf_udpa_go//udpa/type/v1:go_default_library",
+        "@com_github_cncf_xds_go//xds/type/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/cluster/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/endpoint/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/clusters/aggregate/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/transport_sockets/tls/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/discovery/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+    ],
+)
+
+go_test(
+    name = "xdsresource_test",
+    srcs = [
+        "filter_chain_test.go",
+        "matcher_path_test.go",
+        "matcher_test.go",
+        "name_test.go",
+        "test_utils_test.go",
+        "unmarshal_cds_test.go",
+        "unmarshal_eds_test.go",
+        "unmarshal_lds_test.go",
+        "unmarshal_rds_test.go",
+    ],
+    embed = [":xdsresource"],
+    deps = [
+        "//codes",
+        "//internal/envconfig",
+        "//internal/grpcrand",
+        "//internal/grpctest",
+        "//internal/grpcutil",
+        "//internal/resolver",
+        "//internal/testutils",
+        "//internal/testutils/xds/e2e",
+        "//internal/xds/matcher",
+        "//metadata",
+        "//xds/internal",
+        "//xds/internal/clusterspecifier",
+        "//xds/internal/httpfilter",
+        "//xds/internal/httpfilter/rbac",
+        "//xds/internal/httpfilter/router",
+        "//xds/internal/xdsclient/xdsresource/version",
+        "@com_github_cncf_udpa_go//udpa/type/v1:go_default_library",
+        "@com_github_cncf_xds_go//xds/type/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/core:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/api/v2/route:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/cluster/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/endpoint/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/filter/network/http_connection_manager/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v2:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/rbac/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/clusters/aggregate/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/rbac/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/router/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/extensions/transport_sockets/tls/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/service/discovery/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/matcher/v3:go_default_library",
+        "@com_github_envoyproxy_go_control_plane//envoy/type/v3:go_default_library",
+        "@com_github_golang_protobuf//proto:go_default_library",
+        "@com_github_google_go_cmp//cmp:go_default_library",
+        "@com_github_google_go_cmp//cmp/cmpopts:go_default_library",
+        "@io_bazel_rules_go//proto/wkt:any_go_proto",
+        "@io_bazel_rules_go//proto/wkt:struct_go_proto",
+        "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
+        "@org_golang_google_protobuf//testing/protocmp:go_default_library",
+        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
+        "@org_golang_google_protobuf//types/known/durationpb:go_default_library",
+        "@org_golang_google_protobuf//types/known/wrapperspb:go_default_library",
+    ],
+)
diff -Naru grpc-go-old/xds/internal/xdsclient/xdsresource/version/BUILD.bazel grpc-go/xds/internal/xdsclient/xdsresource/version/BUILD.bazel
--- grpc-go-old/xds/internal/xdsclient/xdsresource/version/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ grpc-go/xds/internal/xdsclient/xdsresource/version/BUILD.bazel	2022-11-11 20:19:13.000000000 +0100
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "version",
+    srcs = ["version.go"],
+    importpath = "google.golang.org/grpc/xds/internal/xdsclient/xdsresource/version",
+    visibility = ["//xds:__subpackages__"],
+)
