load("//third-party/docker:image.bzl", "JAVA_DEFAULT_BASE")
load("@monorepo_k8s_config//:config.bzl", "CLUSTER", "REGISTRY", "USER")
load("@com_adobe_rules_gitops//gitops:defs.bzl", "k8s_deploy")

package(default_visibility = ["//visibility:public"])

java_library(
    name = "server_lib",
    srcs = glob(
        ["src/main/java/**/*.java"],
    ),
    resources = glob(
        ["src/main/resources/**"],
    ),
    runtime_deps = [
        "@io_grpc_grpc_java//netty:shaded_maven",
    ],
    deps = [
        "//proto/rating:java",
        "//proto/rating:java_proto",
        "//proto/review:java",
        "//proto/review:java_proto",
        "@com_google_protobuf//:protobuf_java",
        "@com_google_protobuf//:protobuf_java_util",
        "@io_grpc_grpc_java//api",
        "@io_grpc_grpc_java//netty:shaded_maven",
        "@io_grpc_grpc_java//protobuf",
        "@io_grpc_grpc_java//services:health",
        "@io_grpc_grpc_java//services:reflection",
        "@io_grpc_grpc_java//stub",
        "@io_grpc_grpc_java//xds",
        "@io_grpc_grpc_proto//:health_java_proto",
        "@maven//:io_netty_netty_all",
        "@maven//:io_netty_netty_transport",
        "@maven//:io_netty_netty_transport_native_epoll_linux_aarch_64",
        "@maven//:io_netty_netty_transport_native_unix_common",
    ],
)

java_binary(
    name = "server",
    main_class = "com.github.alandiegosantos.monorepo.services.review.GrpcServer",
    runtime_deps = [
        ":server_lib",
    ],
)

alias(
    name = "image.push",
    actual = "//services/review/k8s:services_review_image_" + REGISTRY.replace(":", "_") + "_image.push",
)

k8s_deploy(
    name = "register_argocd",
    cluster = CLUSTER,
    common_labels = {
        "app": "review",
    },
    manifests = ["argocd.yaml"],
    namespace = "argocd",
    user = USER,
)
